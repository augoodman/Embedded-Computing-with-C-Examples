
bin/Debug/homework2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000000fa  0000016e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000fa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         0000039c  00000000  00000000  00000170  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000088e  00000000  00000000  0000050c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00000d9a  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000dac  2**2
                  CONTENTS, READONLY
  6 .debug_info   000005f4  00000000  00000000  00000dec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005a2  00000000  00000000  000013e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001a  00000000  00000000  00001982  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  0000199c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

/////////////////////////////////////////////////////////////////////////////////
/**
 * Program entry point.
 */
int main(void) {
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
    PORTB = 0x0;
  88:	84 e2       	ldi	r24, 0x24	; 36
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	fc 01       	movw	r30, r24
  8e:	10 82       	st	Z, r1
    PORTB |=  (0x1<<1);
  90:	84 e2       	ldi	r24, 0x24	; 36
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	24 e2       	ldi	r18, 0x24	; 36
  96:	30 e0       	ldi	r19, 0x00	; 0
  98:	f9 01       	movw	r30, r18
  9a:	20 81       	ld	r18, Z
  9c:	22 60       	ori	r18, 0x02	; 2
  9e:	fc 01       	movw	r30, r24
  a0:	20 83       	st	Z, r18
    while(1) {
        PORTB ^=  (0x1<<1);
  a2:	84 e2       	ldi	r24, 0x24	; 36
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	24 e2       	ldi	r18, 0x24	; 36
  a8:	30 e0       	ldi	r19, 0x00	; 0
  aa:	f9 01       	movw	r30, r18
  ac:	30 81       	ld	r19, Z
  ae:	22 e0       	ldi	r18, 0x02	; 2
  b0:	23 27       	eor	r18, r19
  b2:	fc 01       	movw	r30, r24
  b4:	20 83       	st	Z, r18
        PINB = 0x2;
  b6:	83 e2       	ldi	r24, 0x23	; 35
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	22 e0       	ldi	r18, 0x02	; 2
  bc:	fc 01       	movw	r30, r24
  be:	20 83       	st	Z, r18
        delay();
  c0:	0e 94 63 00 	call	0xc6	; 0xc6 <delay>
    }
  c4:	ee cf       	rjmp	.-36     	; 0xa2 <main+0x22>

000000c6 <delay>:
}

/**
 * Triggers a delay.
 */
void delay(){
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	00 d0       	rcall	.+0      	; 0xcc <delay+0x6>
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
    volatile unsigned int i;
    for(i=0;i<DELAY_COUNT;i++){}
  d0:	1a 82       	std	Y+2, r1	; 0x02
  d2:	19 82       	std	Y+1, r1	; 0x01
  d4:	05 c0       	rjmp	.+10     	; 0xe0 <delay+0x1a>
  d6:	89 81       	ldd	r24, Y+1	; 0x01
  d8:	9a 81       	ldd	r25, Y+2	; 0x02
  da:	01 96       	adiw	r24, 0x01	; 1
  dc:	9a 83       	std	Y+2, r25	; 0x02
  de:	89 83       	std	Y+1, r24	; 0x01
  e0:	89 81       	ldd	r24, Y+1	; 0x01
  e2:	9a 81       	ldd	r25, Y+2	; 0x02
  e4:	81 15       	cp	r24, r1
  e6:	9a 4f       	sbci	r25, 0xFA	; 250
  e8:	b0 f3       	brcs	.-20     	; 0xd6 <delay+0x10>
}
  ea:	00 00       	nop
  ec:	0f 90       	pop	r0
  ee:	0f 90       	pop	r0
  f0:	df 91       	pop	r29
  f2:	cf 91       	pop	r28
  f4:	08 95       	ret

000000f6 <_exit>:
  f6:	f8 94       	cli

000000f8 <__stop_program>:
  f8:	ff cf       	rjmp	.-2      	; 0xf8 <__stop_program>
