
bin/Debug/project2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008c  00800100  00001d20  00001db4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cf8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .siminfo      00000028  00001cf8  00001cf8  00001d8c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000022d  0080018c  0080018c  00001e40  2**0
                  ALLOC
  4 .stab         00001b3c  00000000  00000000  00001e40  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00000f4a  00000000  00000000  0000397c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000011  00000000  00000000  000048c6  2**0
                  CONTENTS, READONLY
  7 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000048d8  2**2
                  CONTENTS, READONLY
  8 .debug_info   000005f4  00000000  00000000  00004918  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000005a2  00000000  00000000  00004f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000001a  00000000  00000000  000054ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000208  00000000  00000000  000054c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 7f 0a 	jmp	0x14fe	; 0x14fe <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 5f 0c 	jmp	0x18be	; 0x18be <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__vector_18>
      4c:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__vector_19>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 15 02 	jmp	0x42a	; 0x42a <__vector_22>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e2       	ldi	r30, 0x20	; 32
      7c:	fd e1       	ldi	r31, 0x1D	; 29
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 38       	cpi	r26, 0x8C	; 140
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	23 e0       	ldi	r18, 0x03	; 3
      8c:	ac e8       	ldi	r26, 0x8C	; 140
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a9 3b       	cpi	r26, 0xB9	; 185
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 50 02 	call	0x4a0	; 0x4a0 <main>
      9e:	0c 94 7a 0e 	jmp	0x1cf4	; 0x1cf4 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <config_init>:
 *   nothing
 *
 * changes:
 *   EEPROM
 */
void config_init(){
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
    // while busy, wait
    while(eeprom_isbusy()){}
      ae:	00 00       	nop
      b0:	0e 94 06 02 	call	0x40c	; 0x40c <eeprom_isbusy>
      b4:	89 2b       	or	r24, r25
      b6:	e1 f7       	brne	.-8      	; 0xb0 <config_init+0xa>
    // initialize config with eeprom.readbuf()
    eeprom_readbuf(0x040, (unsigned char *)defaults, sizeof(*defaults) - 1);
      b8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
      bc:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
      c0:	41 e1       	ldi	r20, 0x11	; 17
      c2:	bc 01       	movw	r22, r24
      c4:	80 e4       	ldi	r24, 0x40	; 64
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	0e 94 b8 01 	call	0x370	; 0x370 <eeprom_readbuf>
    if(!config_is_data_valid()){
      cc:	0e 94 ac 00 	call	0x158	; 0x158 <config_is_data_valid>
      d0:	89 2b       	or	r24, r25
      d2:	71 f4       	brne	.+28     	; 0xf0 <config_init+0x4a>
        config_write_defaults();
      d4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <config_write_defaults>
        eeprom_readbuf(0x040, (unsigned char *)defaults, sizeof(*defaults) - 1);
      d8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
      dc:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
      e0:	41 e1       	ldi	r20, 0x11	; 17
      e2:	bc 01       	movw	r22, r24
      e4:	80 e4       	ldi	r24, 0x40	; 64
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	0e 94 b8 01 	call	0x370	; 0x370 <eeprom_readbuf>
        modified = 0;
      ec:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <modified>
    }
}
      f0:	00 00       	nop
      f2:	df 91       	pop	r29
      f4:	cf 91       	pop	r28
      f6:	08 95       	ret

000000f8 <config_update>:
 *   nothing
 *
 * changes:
 *   EEPROM
 */
void config_update(){
      f8:	cf 93       	push	r28
      fa:	df 93       	push	r29
      fc:	cd b7       	in	r28, 0x3d	; 61
      fe:	de b7       	in	r29, 0x3e	; 62
    // while busy, wait
    while(eeprom_isbusy()){}
     100:	00 00       	nop
     102:	0e 94 06 02 	call	0x40c	; 0x40c <eeprom_isbusy>
     106:	89 2b       	or	r24, r25
     108:	e1 f7       	brne	.-8      	; 0x102 <config_update+0xa>
    if(modified){
     10a:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <modified>
     10e:	88 23       	and	r24, r24
     110:	a1 f0       	breq	.+40     	; 0x13a <config_update+0x42>
        update_checksum((unsigned char *)config, sizeof(*config));
     112:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     116:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     11a:	62 e1       	ldi	r22, 0x12	; 18
     11c:	70 e0       	ldi	r23, 0x00	; 0
     11e:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <update_checksum>
        eeprom_writebuf(0x040, (unsigned char *)config, sizeof(*config) - 1);
     122:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     126:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     12a:	41 e1       	ldi	r20, 0x11	; 17
     12c:	bc 01       	movw	r22, r24
     12e:	80 e4       	ldi	r24, 0x40	; 64
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	0e 94 62 01 	call	0x2c4	; 0x2c4 <eeprom_writebuf>
        modified = 0;
     136:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <modified>
    }
}
     13a:	00 00       	nop
     13c:	df 91       	pop	r29
     13e:	cf 91       	pop	r28
     140:	08 95       	ret

00000142 <config_set_modified>:
 *   nothing
 *
 * changes:
 *   none
 */
void config_set_modified(){
     142:	cf 93       	push	r28
     144:	df 93       	push	r29
     146:	cd b7       	in	r28, 0x3d	; 61
     148:	de b7       	in	r29, 0x3e	; 62
    modified = 1;
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <modified>
}
     150:	00 00       	nop
     152:	df 91       	pop	r29
     154:	cf 91       	pop	r28
     156:	08 95       	ret

00000158 <config_is_data_valid>:
 *   int - validation boolean
 *
 * changes:
 *   none
 */
int config_is_data_valid(){
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	00 d0       	rcall	.+0      	; 0x15e <config_is_data_valid+0x6>
     15e:	cd b7       	in	r28, 0x3d	; 61
     160:	de b7       	in	r29, 0x3e	; 62
    int result = 1;
     162:	81 e0       	ldi	r24, 0x01	; 1
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	9a 83       	std	Y+2, r25	; 0x02
     168:	89 83       	std	Y+1, r24	; 0x01
    if(config->token[0] != 'A' || config->token[1] != 'S' || config->token[2] != 'U')
     16a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     16e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     172:	fc 01       	movw	r30, r24
     174:	80 81       	ld	r24, Z
     176:	81 34       	cpi	r24, 0x41	; 65
     178:	81 f4       	brne	.+32     	; 0x19a <config_is_data_valid+0x42>
     17a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     17e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     182:	fc 01       	movw	r30, r24
     184:	81 81       	ldd	r24, Z+1	; 0x01
     186:	83 35       	cpi	r24, 0x53	; 83
     188:	41 f4       	brne	.+16     	; 0x19a <config_is_data_valid+0x42>
     18a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     18e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     192:	fc 01       	movw	r30, r24
     194:	82 81       	ldd	r24, Z+2	; 0x02
     196:	85 35       	cpi	r24, 0x55	; 85
     198:	11 f0       	breq	.+4      	; 0x19e <config_is_data_valid+0x46>
        result = 0;
     19a:	1a 82       	std	Y+2, r1	; 0x02
     19c:	19 82       	std	Y+1, r1	; 0x01
    if(!is_checksum_valid((unsigned char *)config, sizeof(*config)))
     19e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     1a2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     1a6:	62 e1       	ldi	r22, 0x12	; 18
     1a8:	70 e0       	ldi	r23, 0x00	; 0
     1aa:	0e 94 1c 03 	call	0x638	; 0x638 <is_checksum_valid>
     1ae:	89 2b       	or	r24, r25
     1b0:	11 f4       	brne	.+4      	; 0x1b6 <config_is_data_valid+0x5e>
        result = 0;
     1b2:	1a 82       	std	Y+2, r1	; 0x02
     1b4:	19 82       	std	Y+1, r1	; 0x01
    return result;
     1b6:	89 81       	ldd	r24, Y+1	; 0x01
     1b8:	9a 81       	ldd	r25, Y+2	; 0x02

}
     1ba:	0f 90       	pop	r0
     1bc:	0f 90       	pop	r0
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	08 95       	ret

000001c4 <config_write_defaults>:
 *   nothing
 *
 * changes:
 *   EEPROM
 */
void config_write_defaults(){
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	cd b7       	in	r28, 0x3d	; 61
     1ca:	de b7       	in	r29, 0x3e	; 62
    defaults->token[0] = 'A';
     1cc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     1d0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     1d4:	21 e4       	ldi	r18, 0x41	; 65
     1d6:	fc 01       	movw	r30, r24
     1d8:	20 83       	st	Z, r18
    defaults->token[1] = 'S';
     1da:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     1de:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     1e2:	23 e5       	ldi	r18, 0x53	; 83
     1e4:	fc 01       	movw	r30, r24
     1e6:	21 83       	std	Z+1, r18	; 0x01
    defaults->token[2] = 'U';
     1e8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     1ec:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     1f0:	25 e5       	ldi	r18, 0x55	; 85
     1f2:	fc 01       	movw	r30, r24
     1f4:	22 83       	std	Z+2, r18	; 0x02
    defaults->token[3] = '\0';
     1f6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     1fa:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     1fe:	fc 01       	movw	r30, r24
     200:	13 82       	std	Z+3, r1	; 0x03
    defaults->hi_alarm = 0x3FF;
     202:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     206:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     20a:	2f ef       	ldi	r18, 0xFF	; 255
     20c:	33 e0       	ldi	r19, 0x03	; 3
     20e:	fc 01       	movw	r30, r24
     210:	35 83       	std	Z+5, r19	; 0x05
     212:	24 83       	std	Z+4, r18	; 0x04
    defaults->hi_warn = 0x3FE;
     214:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     218:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     21c:	2e ef       	ldi	r18, 0xFE	; 254
     21e:	33 e0       	ldi	r19, 0x03	; 3
     220:	fc 01       	movw	r30, r24
     222:	37 83       	std	Z+7, r19	; 0x07
     224:	26 83       	std	Z+6, r18	; 0x06
    defaults->lo_alarm = 0x0000;
     226:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     22a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     22e:	fc 01       	movw	r30, r24
     230:	11 86       	std	Z+9, r1	; 0x09
     232:	10 86       	std	Z+8, r1	; 0x08
    defaults->lo_warn = 0x0001;
     234:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     238:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     23c:	21 e0       	ldi	r18, 0x01	; 1
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	fc 01       	movw	r30, r24
     242:	33 87       	std	Z+11, r19	; 0x0b
     244:	22 87       	std	Z+10, r18	; 0x0a
    defaults->use_static_ip = '0';
     246:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     24a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     24e:	20 e3       	ldi	r18, 0x30	; 48
     250:	fc 01       	movw	r30, r24
     252:	24 87       	std	Z+12, r18	; 0x0c
    defaults->static_ip[0] = 0xC0;
     254:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     258:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     25c:	20 ec       	ldi	r18, 0xC0	; 192
     25e:	fc 01       	movw	r30, r24
     260:	25 87       	std	Z+13, r18	; 0x0d
    defaults->static_ip[1] = 0xA8;
     262:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     266:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     26a:	28 ea       	ldi	r18, 0xA8	; 168
     26c:	fc 01       	movw	r30, r24
     26e:	26 87       	std	Z+14, r18	; 0x0e
    defaults->static_ip[2] = 0x1;
     270:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     274:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     278:	21 e0       	ldi	r18, 0x01	; 1
     27a:	fc 01       	movw	r30, r24
     27c:	27 87       	std	Z+15, r18	; 0x0f
    defaults->static_ip[3] = 0x64;
     27e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     282:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     286:	24 e6       	ldi	r18, 0x64	; 100
     288:	fc 01       	movw	r30, r24
     28a:	20 8b       	std	Z+16, r18	; 0x10
    defaults->checksum = 0;
     28c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     290:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     294:	fc 01       	movw	r30, r24
     296:	11 8a       	std	Z+17, r1	; 0x11
    update_checksum((unsigned char *)defaults, sizeof(*defaults));
     298:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     29c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     2a0:	62 e1       	ldi	r22, 0x12	; 18
     2a2:	70 e0       	ldi	r23, 0x00	; 0
     2a4:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <update_checksum>
    eeprom_writebuf(0x040, (unsigned char *)defaults, sizeof(*defaults));
     2a8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <defaults>
     2ac:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <defaults+0x1>
     2b0:	42 e1       	ldi	r20, 0x12	; 18
     2b2:	bc 01       	movw	r22, r24
     2b4:	80 e4       	ldi	r24, 0x40	; 64
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	0e 94 62 01 	call	0x2c4	; 0x2c4 <eeprom_writebuf>
}
     2bc:	00 00       	nop
     2be:	df 91       	pop	r29
     2c0:	cf 91       	pop	r28
     2c2:	08 95       	ret

000002c4 <eeprom_writebuf>:
 *   nothing
 *
 * changes:
 *   EECR
 */
void eeprom_writebuf(unsigned int addr, unsigned char* buf, unsigned char size){
     2c4:	cf 93       	push	r28
     2c6:	df 93       	push	r29
     2c8:	cd b7       	in	r28, 0x3d	; 61
     2ca:	de b7       	in	r29, 0x3e	; 62
     2cc:	27 97       	sbiw	r28, 0x07	; 7
     2ce:	0f b6       	in	r0, 0x3f	; 63
     2d0:	f8 94       	cli
     2d2:	de bf       	out	0x3e, r29	; 62
     2d4:	0f be       	out	0x3f, r0	; 63
     2d6:	cd bf       	out	0x3d, r28	; 61
     2d8:	9c 83       	std	Y+4, r25	; 0x04
     2da:	8b 83       	std	Y+3, r24	; 0x03
     2dc:	7e 83       	std	Y+6, r23	; 0x06
     2de:	6d 83       	std	Y+5, r22	; 0x05
     2e0:	4f 83       	std	Y+7, r20	; 0x07
    // while busy, wait
    while(eeprom_isbusy()){}
     2e2:	00 00       	nop
     2e4:	0e 94 06 02 	call	0x40c	; 0x40c <eeprom_isbusy>
     2e8:	89 2b       	or	r24, r25
     2ea:	e1 f7       	brne	.-8      	; 0x2e4 <eeprom_writebuf+0x20>
    // initialize write
    writeaddr = addr;
     2ec:	8b 81       	ldd	r24, Y+3	; 0x03
     2ee:	9c 81       	ldd	r25, Y+4	; 0x04
     2f0:	90 93 e2 01 	sts	0x01E2, r25	; 0x8001e2 <writeaddr+0x1>
     2f4:	80 93 e1 01 	sts	0x01E1, r24	; 0x8001e1 <writeaddr>
    write_busy = 1;
     2f8:	81 e0       	ldi	r24, 0x01	; 1
     2fa:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <write_busy>
    bufidx = 0;
     2fe:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <bufidx>
    // copy buf[0:size-1] to writebuf[0:size-1]
    int i;
    for(i = 0; i < size - 1; i++)
     302:	1a 82       	std	Y+2, r1	; 0x02
     304:	19 82       	std	Y+1, r1	; 0x01
     306:	13 c0       	rjmp	.+38     	; 0x32e <eeprom_writebuf+0x6a>
        writebuf[i] = buf[i];
     308:	89 81       	ldd	r24, Y+1	; 0x01
     30a:	9a 81       	ldd	r25, Y+2	; 0x02
     30c:	2d 81       	ldd	r18, Y+5	; 0x05
     30e:	3e 81       	ldd	r19, Y+6	; 0x06
     310:	82 0f       	add	r24, r18
     312:	93 1f       	adc	r25, r19
     314:	fc 01       	movw	r30, r24
     316:	20 81       	ld	r18, Z
     318:	89 81       	ldd	r24, Y+1	; 0x01
     31a:	9a 81       	ldd	r25, Y+2	; 0x02
     31c:	81 56       	subi	r24, 0x61	; 97
     31e:	9e 4f       	sbci	r25, 0xFE	; 254
     320:	fc 01       	movw	r30, r24
     322:	20 83       	st	Z, r18
    writeaddr = addr;
    write_busy = 1;
    bufidx = 0;
    // copy buf[0:size-1] to writebuf[0:size-1]
    int i;
    for(i = 0; i < size - 1; i++)
     324:	89 81       	ldd	r24, Y+1	; 0x01
     326:	9a 81       	ldd	r25, Y+2	; 0x02
     328:	01 96       	adiw	r24, 0x01	; 1
     32a:	9a 83       	std	Y+2, r25	; 0x02
     32c:	89 83       	std	Y+1, r24	; 0x01
     32e:	8f 81       	ldd	r24, Y+7	; 0x07
     330:	88 2f       	mov	r24, r24
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	9c 01       	movw	r18, r24
     336:	21 50       	subi	r18, 0x01	; 1
     338:	31 09       	sbc	r19, r1
     33a:	89 81       	ldd	r24, Y+1	; 0x01
     33c:	9a 81       	ldd	r25, Y+2	; 0x02
     33e:	82 17       	cp	r24, r18
     340:	93 07       	cpc	r25, r19
     342:	14 f3       	brlt	.-60     	; 0x308 <eeprom_writebuf+0x44>
        writebuf[i] = buf[i];
    writesize = size;
     344:	8f 81       	ldd	r24, Y+7	; 0x07
     346:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <writesize>
    // enable eeprom interrupts
    EECR |= (1<<3);
     34a:	8f e3       	ldi	r24, 0x3F	; 63
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	2f e3       	ldi	r18, 0x3F	; 63
     350:	30 e0       	ldi	r19, 0x00	; 0
     352:	f9 01       	movw	r30, r18
     354:	20 81       	ld	r18, Z
     356:	28 60       	ori	r18, 0x08	; 8
     358:	fc 01       	movw	r30, r24
     35a:	20 83       	st	Z, r18
}
     35c:	00 00       	nop
     35e:	27 96       	adiw	r28, 0x07	; 7
     360:	0f b6       	in	r0, 0x3f	; 63
     362:	f8 94       	cli
     364:	de bf       	out	0x3e, r29	; 62
     366:	0f be       	out	0x3f, r0	; 63
     368:	cd bf       	out	0x3d, r28	; 61
     36a:	df 91       	pop	r29
     36c:	cf 91       	pop	r28
     36e:	08 95       	ret

00000370 <eeprom_readbuf>:
 *   nothing
 *
 * changes:
 *   none
 */
void eeprom_readbuf(unsigned int addr, unsigned char* buf, unsigned char size){
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	cd b7       	in	r28, 0x3d	; 61
     376:	de b7       	in	r29, 0x3e	; 62
     378:	27 97       	sbiw	r28, 0x07	; 7
     37a:	0f b6       	in	r0, 0x3f	; 63
     37c:	f8 94       	cli
     37e:	de bf       	out	0x3e, r29	; 62
     380:	0f be       	out	0x3f, r0	; 63
     382:	cd bf       	out	0x3d, r28	; 61
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	8b 83       	std	Y+3, r24	; 0x03
     388:	7e 83       	std	Y+6, r23	; 0x06
     38a:	6d 83       	std	Y+5, r22	; 0x05
     38c:	4f 83       	std	Y+7, r20	; 0x07
    // while busy, wait
    while(eeprom_isbusy()){}
     38e:	00 00       	nop
     390:	0e 94 06 02 	call	0x40c	; 0x40c <eeprom_isbusy>
     394:	89 2b       	or	r24, r25
     396:	e1 f7       	brne	.-8      	; 0x390 <eeprom_readbuf+0x20>
    // read characters from eeprom starting at addr and place in buff[0:size-1]
    int i;
    for(i = 0; i < size; i++){
     398:	1a 82       	std	Y+2, r1	; 0x02
     39a:	19 82       	std	Y+1, r1	; 0x01
     39c:	25 c0       	rjmp	.+74     	; 0x3e8 <eeprom_readbuf+0x78>
        EEAR = addr + i;
     39e:	81 e4       	ldi	r24, 0x41	; 65
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	49 81       	ldd	r20, Y+1	; 0x01
     3a4:	5a 81       	ldd	r21, Y+2	; 0x02
     3a6:	2b 81       	ldd	r18, Y+3	; 0x03
     3a8:	3c 81       	ldd	r19, Y+4	; 0x04
     3aa:	24 0f       	add	r18, r20
     3ac:	35 1f       	adc	r19, r21
     3ae:	fc 01       	movw	r30, r24
     3b0:	31 83       	std	Z+1, r19	; 0x01
     3b2:	20 83       	st	Z, r18
        EECR |= (1<<0);
     3b4:	8f e3       	ldi	r24, 0x3F	; 63
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	2f e3       	ldi	r18, 0x3F	; 63
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	f9 01       	movw	r30, r18
     3be:	20 81       	ld	r18, Z
     3c0:	21 60       	ori	r18, 0x01	; 1
     3c2:	fc 01       	movw	r30, r24
     3c4:	20 83       	st	Z, r18
        buf[i] = EEDR;
     3c6:	89 81       	ldd	r24, Y+1	; 0x01
     3c8:	9a 81       	ldd	r25, Y+2	; 0x02
     3ca:	2d 81       	ldd	r18, Y+5	; 0x05
     3cc:	3e 81       	ldd	r19, Y+6	; 0x06
     3ce:	82 0f       	add	r24, r18
     3d0:	93 1f       	adc	r25, r19
     3d2:	20 e4       	ldi	r18, 0x40	; 64
     3d4:	30 e0       	ldi	r19, 0x00	; 0
     3d6:	f9 01       	movw	r30, r18
     3d8:	20 81       	ld	r18, Z
     3da:	fc 01       	movw	r30, r24
     3dc:	20 83       	st	Z, r18
void eeprom_readbuf(unsigned int addr, unsigned char* buf, unsigned char size){
    // while busy, wait
    while(eeprom_isbusy()){}
    // read characters from eeprom starting at addr and place in buff[0:size-1]
    int i;
    for(i = 0; i < size; i++){
     3de:	89 81       	ldd	r24, Y+1	; 0x01
     3e0:	9a 81       	ldd	r25, Y+2	; 0x02
     3e2:	01 96       	adiw	r24, 0x01	; 1
     3e4:	9a 83       	std	Y+2, r25	; 0x02
     3e6:	89 83       	std	Y+1, r24	; 0x01
     3e8:	8f 81       	ldd	r24, Y+7	; 0x07
     3ea:	28 2f       	mov	r18, r24
     3ec:	30 e0       	ldi	r19, 0x00	; 0
     3ee:	89 81       	ldd	r24, Y+1	; 0x01
     3f0:	9a 81       	ldd	r25, Y+2	; 0x02
     3f2:	82 17       	cp	r24, r18
     3f4:	93 07       	cpc	r25, r19
     3f6:	9c f2       	brlt	.-90     	; 0x39e <eeprom_readbuf+0x2e>
        EEAR = addr + i;
        EECR |= (1<<0);
        buf[i] = EEDR;
    }
}
     3f8:	00 00       	nop
     3fa:	27 96       	adiw	r28, 0x07	; 7
     3fc:	0f b6       	in	r0, 0x3f	; 63
     3fe:	f8 94       	cli
     400:	de bf       	out	0x3e, r29	; 62
     402:	0f be       	out	0x3f, r0	; 63
     404:	cd bf       	out	0x3d, r28	; 61
     406:	df 91       	pop	r29
     408:	cf 91       	pop	r28
     40a:	08 95       	ret

0000040c <eeprom_isbusy>:
 *   nothing
 *
 * changes:
 *   none
 */
int eeprom_isbusy() {
     40c:	cf 93       	push	r28
     40e:	df 93       	push	r29
     410:	cd b7       	in	r28, 0x3d	; 61
     412:	de b7       	in	r29, 0x3e	; 62
    return (write_busy == 1);
     414:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <write_busy>
     418:	81 e0       	ldi	r24, 0x01	; 1
     41a:	91 30       	cpi	r25, 0x01	; 1
     41c:	09 f0       	breq	.+2      	; 0x420 <eeprom_isbusy+0x14>
     41e:	80 e0       	ldi	r24, 0x00	; 0
     420:	88 2f       	mov	r24, r24
     422:	90 e0       	ldi	r25, 0x00	; 0
}
     424:	df 91       	pop	r29
     426:	cf 91       	pop	r28
     428:	08 95       	ret

0000042a <__vector_22>:
 *
 * changes:
 *   EEAR, EECR, EEDR
 */
void __vector_22(void) __attribute__ ((signal, used, externally_visible));
void __vector_22(void){
     42a:	1f 92       	push	r1
     42c:	0f 92       	push	r0
     42e:	0f b6       	in	r0, 0x3f	; 63
     430:	0f 92       	push	r0
     432:	11 24       	eor	r1, r1
     434:	8f 93       	push	r24
     436:	9f 93       	push	r25
     438:	ef 93       	push	r30
     43a:	ff 93       	push	r31
    if(bufidx < writesize){
     43c:	90 91 df 01 	lds	r25, 0x01DF	; 0x8001df <bufidx>
     440:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <writesize>
     444:	98 17       	cp	r25, r24
     446:	00 f5       	brcc	.+64     	; 0x488 <__vector_22+0x5e>
        while(EECR & (1<<1));
     448:	f9 99       	sbic	0x1f, 1	; 31
     44a:	fe cf       	rjmp	.-4      	; 0x448 <__vector_22+0x1e>
        EEAR = writeaddr;
     44c:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <writeaddr>
     450:	90 91 e2 01 	lds	r25, 0x01E2	; 0x8001e2 <writeaddr+0x1>
     454:	92 bd       	out	0x22, r25	; 34
     456:	81 bd       	out	0x21, r24	; 33
        EEDR = writebuf[bufidx];
     458:	e0 91 df 01 	lds	r30, 0x01DF	; 0x8001df <bufidx>
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	e1 56       	subi	r30, 0x61	; 97
     460:	fe 4f       	sbci	r31, 0xFE	; 254
     462:	80 81       	ld	r24, Z
     464:	80 bd       	out	0x20, r24	; 32
        /* Write logical one to EEMPE */
        EECR |= (1<<2);
     466:	fa 9a       	sbi	0x1f, 2	; 31
        /* Start eeprom write by setting EEPE */
        EECR |= (1<<1);
     468:	f9 9a       	sbi	0x1f, 1	; 31
        //uart_writehex8(((unsigned char*)writeaddr));
        writeaddr++;
     46a:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <writeaddr>
     46e:	90 91 e2 01 	lds	r25, 0x01E2	; 0x8001e2 <writeaddr+0x1>
     472:	01 96       	adiw	r24, 0x01	; 1
     474:	90 93 e2 01 	sts	0x01E2, r25	; 0x8001e2 <writeaddr+0x1>
     478:	80 93 e1 01 	sts	0x01E1, r24	; 0x8001e1 <writeaddr>
        bufidx++;
     47c:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <bufidx>
     480:	8f 5f       	subi	r24, 0xFF	; 255
     482:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <bufidx>
     486:	03 c0       	rjmp	.+6      	; 0x48e <__vector_22+0x64>
    }
    else{
        //EECR = 0;
        EECR &= ~(1<<3);
     488:	fb 98       	cbi	0x1f, 3	; 31
        write_busy = 0;
     48a:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <write_busy>
    }
}
     48e:	ff 91       	pop	r31
     490:	ef 91       	pop	r30
     492:	9f 91       	pop	r25
     494:	8f 91       	pop	r24
     496:	0f 90       	pop	r0
     498:	0f be       	out	0x3f, r0	; 63
     49a:	0f 90       	pop	r0
     49c:	1f 90       	pop	r1
     49e:	18 95       	reti

000004a0 <main>:
 *   No direct state changes.
 *
 * NOTE: Return statement unreachable, so it is not used.
 */
int main(void)
{
     4a0:	cf 93       	push	r28
     4a2:	df 93       	push	r29
     4a4:	00 d0       	rcall	.+0      	; 0x4a6 <main+0x6>
     4a6:	cd b7       	in	r28, 0x3d	; 61
     4a8:	de b7       	in	r29, 0x3e	; 62
    //init uart, config, led, log, rtc, vpd
    uart_init();
     4aa:	0e 94 cb 0a 	call	0x1596	; 0x1596 <uart_init>
    config_init();
     4ae:	0e 94 53 00 	call	0xa6	; 0xa6 <config_init>
    led_init();
     4b2:	0e 94 28 05 	call	0xa50	; 0xa50 <led_init>
    log_init();
     4b6:	0e 94 5a 05 	call	0xab4	; 0xab4 <log_init>
    rtc_init();
     4ba:	0e 94 20 07 	call	0xe40	; 0xe40 <rtc_init>
    vpd_init();
     4be:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <vpd_init>
    int dumped = 0;
     4c2:	1a 82       	std	Y+2, r1	; 0x02
     4c4:	19 82       	std	Y+1, r1	; 0x01
    //set led blink pattern to "--- -.-"
    led_set_blink("--- -.-");
     4c6:	80 e2       	ldi	r24, 0x20	; 32
     4c8:	91 e0       	ldi	r25, 0x01	; 1
     4ca:	0e 94 bc 04 	call	0x978	; 0x978 <led_set_blink>
    //init rtc date/time to "01/01/2019 00:00:00"
    rtc_set_by_datestr("01/01/2019 00:00:00");
     4ce:	88 e2       	ldi	r24, 0x28	; 40
     4d0:	91 e0       	ldi	r25, 0x01	; 1
     4d2:	0e 94 4f 07 	call	0xe9e	; 0xe9e <rtc_set_by_datestr>
    //print assignment and author info to console
    uart_writestr("SER 486 Project 2 - Andrew Goodman\n\r");
     4d6:	8c e3       	ldi	r24, 0x3C	; 60
     4d8:	91 e0       	ldi	r25, 0x01	; 1
     4da:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <uart_writestr>
    //get model, manufacturer and token
    eeprom_readbuf(VPD, (unsigned char *)vpd, sizeof(*vpd) - 1);
     4de:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <vpd>
     4e2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <vpd+0x1>
     4e6:	46 e3       	ldi	r20, 0x36	; 54
     4e8:	bc 01       	movw	r22, r24
     4ea:	80 e0       	ldi	r24, 0x00	; 0
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	0e 94 b8 01 	call	0x370	; 0x370 <eeprom_readbuf>
    eeprom_readbuf(CONFIG, (unsigned char *)config, sizeof(*config) - 1);
     4f2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <config>
     4f6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <config+0x1>
     4fa:	41 e1       	ldi	r20, 0x11	; 17
     4fc:	bc 01       	movw	r22, r24
     4fe:	80 e4       	ldi	r24, 0x40	; 64
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	0e 94 b8 01 	call	0x370	; 0x370 <eeprom_readbuf>
    uart_writestr(vpd->model);
     506:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <vpd>
     50a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <vpd+0x1>
     50e:	04 96       	adiw	r24, 0x04	; 4
     510:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <uart_writestr>
    uart_writestr("\n\r");
     514:	81 e6       	ldi	r24, 0x61	; 97
     516:	91 e0       	ldi	r25, 0x01	; 1
     518:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <uart_writestr>
    uart_writestr(vpd->manufacturer);
     51c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <vpd>
     520:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <vpd+0x1>
     524:	40 96       	adiw	r24, 0x10	; 16
     526:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <uart_writestr>
    uart_writestr("\n\r");
     52a:	81 e6       	ldi	r24, 0x61	; 97
     52c:	91 e0       	ldi	r25, 0x01	; 1
     52e:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <uart_writestr>
    uart_writestr(config->token);
     532:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <config>
     536:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <config+0x1>
     53a:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <uart_writestr>
    uart_writestr("\n\r");
     53e:	81 e6       	ldi	r24, 0x61	; 97
     540:	91 e0       	ldi	r25, 0x01	; 1
     542:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <uart_writestr>
    //set use static ip to 1
    config->use_static_ip = '1';
     546:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <config>
     54a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <config+0x1>
     54e:	21 e3       	ldi	r18, 0x31	; 49
     550:	fc 01       	movw	r30, r24
     552:	24 87       	std	Z+12, r18	; 0x0c
    eeprom_writebuf(CONFIG, (unsigned char *)config, sizeof(*config));
     554:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <config>
     558:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <config+0x1>
     55c:	42 e1       	ldi	r20, 0x12	; 18
     55e:	bc 01       	movw	r22, r24
     560:	80 e4       	ldi	r24, 0x40	; 64
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	0e 94 62 01 	call	0x2c4	; 0x2c4 <eeprom_writebuf>
    //clear event log and add records: 0xAA, 0xBB, 0xCC
    log_clear();
     568:	0e 94 a6 06 	call	0xd4c	; 0xd4c <log_clear>
    log_add_record(0xAA);
     56c:	8a ea       	ldi	r24, 0xAA	; 170
     56e:	0e 94 55 06 	call	0xcaa	; 0xcaa <log_add_record>
    log_add_record(0xBB);
     572:	8b eb       	ldi	r24, 0xBB	; 187
     574:	0e 94 55 06 	call	0xcaa	; 0xcaa <log_add_record>
    log_add_record(0xCC);
     578:	8c ec       	ldi	r24, 0xCC	; 204
     57a:	0e 94 55 06 	call	0xcaa	; 0xcaa <log_add_record>
    while(1){
        led_update();
     57e:	0e 94 ce 04 	call	0x99c	; 0x99c <led_update>
        log_update();
     582:	0e 94 1f 06 	call	0xc3e	; 0xc3e <log_update>
        config_update();
     586:	0e 94 7c 00 	call	0xf8	; 0xf8 <config_update>
        if ((!eeprom_isbusy()) && (!dumped)) {
     58a:	0e 94 06 02 	call	0x40c	; 0x40c <eeprom_isbusy>
     58e:	89 2b       	or	r24, r25
     590:	b1 f7       	brne	.-20     	; 0x57e <main+0xde>
     592:	89 81       	ldd	r24, Y+1	; 0x01
     594:	9a 81       	ldd	r25, Y+2	; 0x02
     596:	89 2b       	or	r24, r25
     598:	91 f7       	brne	.-28     	; 0x57e <main+0xde>
            dump_eeprom(0,0x100);
     59a:	60 e0       	ldi	r22, 0x00	; 0
     59c:	71 e0       	ldi	r23, 0x01	; 1
     59e:	80 e0       	ldi	r24, 0x00	; 0
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	0e 94 95 0b 	call	0x172a	; 0x172a <dump_eeprom>
            dumped=1;
     5a6:	81 e0       	ldi	r24, 0x01	; 1
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	9a 83       	std	Y+2, r25	; 0x02
     5ac:	89 83       	std	Y+1, r24	; 0x01
        }
    }
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <main+0xde>

000005b0 <update_checksum>:
 *   nothing
 *
 * changes:
 *   none
 */
void update_checksum(unsigned char *data, unsigned int dsize){
     5b0:	cf 93       	push	r28
     5b2:	df 93       	push	r29
     5b4:	cd b7       	in	r28, 0x3d	; 61
     5b6:	de b7       	in	r29, 0x3e	; 62
     5b8:	27 97       	sbiw	r28, 0x07	; 7
     5ba:	0f b6       	in	r0, 0x3f	; 63
     5bc:	f8 94       	cli
     5be:	de bf       	out	0x3e, r29	; 62
     5c0:	0f be       	out	0x3f, r0	; 63
     5c2:	cd bf       	out	0x3d, r28	; 61
     5c4:	9d 83       	std	Y+5, r25	; 0x05
     5c6:	8c 83       	std	Y+4, r24	; 0x04
     5c8:	7f 83       	std	Y+7, r23	; 0x07
     5ca:	6e 83       	std	Y+6, r22	; 0x06
    unsigned char i;
    unsigned sum = 0;
     5cc:	1b 82       	std	Y+3, r1	; 0x03
     5ce:	1a 82       	std	Y+2, r1	; 0x02
    for (i = 0; i < dsize - 1; i++)
     5d0:	19 82       	std	Y+1, r1	; 0x01
     5d2:	14 c0       	rjmp	.+40     	; 0x5fc <update_checksum+0x4c>
        sum += ((unsigned char *)data)[i];
     5d4:	89 81       	ldd	r24, Y+1	; 0x01
     5d6:	88 2f       	mov	r24, r24
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	2c 81       	ldd	r18, Y+4	; 0x04
     5dc:	3d 81       	ldd	r19, Y+5	; 0x05
     5de:	82 0f       	add	r24, r18
     5e0:	93 1f       	adc	r25, r19
     5e2:	fc 01       	movw	r30, r24
     5e4:	80 81       	ld	r24, Z
     5e6:	88 2f       	mov	r24, r24
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	2a 81       	ldd	r18, Y+2	; 0x02
     5ec:	3b 81       	ldd	r19, Y+3	; 0x03
     5ee:	82 0f       	add	r24, r18
     5f0:	93 1f       	adc	r25, r19
     5f2:	9b 83       	std	Y+3, r25	; 0x03
     5f4:	8a 83       	std	Y+2, r24	; 0x02
 *   none
 */
void update_checksum(unsigned char *data, unsigned int dsize){
    unsigned char i;
    unsigned sum = 0;
    for (i = 0; i < dsize - 1; i++)
     5f6:	89 81       	ldd	r24, Y+1	; 0x01
     5f8:	8f 5f       	subi	r24, 0xFF	; 255
     5fa:	89 83       	std	Y+1, r24	; 0x01
     5fc:	89 81       	ldd	r24, Y+1	; 0x01
     5fe:	28 2f       	mov	r18, r24
     600:	30 e0       	ldi	r19, 0x00	; 0
     602:	8e 81       	ldd	r24, Y+6	; 0x06
     604:	9f 81       	ldd	r25, Y+7	; 0x07
     606:	01 97       	sbiw	r24, 0x01	; 1
     608:	28 17       	cp	r18, r24
     60a:	39 07       	cpc	r19, r25
     60c:	18 f3       	brcs	.-58     	; 0x5d4 <update_checksum+0x24>
        sum += ((unsigned char *)data)[i];
    data[dsize - 1] = 0 - sum;
     60e:	8e 81       	ldd	r24, Y+6	; 0x06
     610:	9f 81       	ldd	r25, Y+7	; 0x07
     612:	01 97       	sbiw	r24, 0x01	; 1
     614:	2c 81       	ldd	r18, Y+4	; 0x04
     616:	3d 81       	ldd	r19, Y+5	; 0x05
     618:	82 0f       	add	r24, r18
     61a:	93 1f       	adc	r25, r19
     61c:	2a 81       	ldd	r18, Y+2	; 0x02
     61e:	21 95       	neg	r18
     620:	fc 01       	movw	r30, r24
     622:	20 83       	st	Z, r18
}
     624:	00 00       	nop
     626:	27 96       	adiw	r28, 0x07	; 7
     628:	0f b6       	in	r0, 0x3f	; 63
     62a:	f8 94       	cli
     62c:	de bf       	out	0x3e, r29	; 62
     62e:	0f be       	out	0x3f, r0	; 63
     630:	cd bf       	out	0x3d, r28	; 61
     632:	df 91       	pop	r29
     634:	cf 91       	pop	r28
     636:	08 95       	ret

00000638 <is_checksum_valid>:
 *   nothing
 *
 * changes:
 *   none
 */
int is_checksum_valid(unsigned char *data, unsigned int dsize){
     638:	cf 93       	push	r28
     63a:	df 93       	push	r29
     63c:	cd b7       	in	r28, 0x3d	; 61
     63e:	de b7       	in	r29, 0x3e	; 62
     640:	27 97       	sbiw	r28, 0x07	; 7
     642:	0f b6       	in	r0, 0x3f	; 63
     644:	f8 94       	cli
     646:	de bf       	out	0x3e, r29	; 62
     648:	0f be       	out	0x3f, r0	; 63
     64a:	cd bf       	out	0x3d, r28	; 61
     64c:	9d 83       	std	Y+5, r25	; 0x05
     64e:	8c 83       	std	Y+4, r24	; 0x04
     650:	7f 83       	std	Y+7, r23	; 0x07
     652:	6e 83       	std	Y+6, r22	; 0x06
    unsigned char i;
    unsigned sum = 0;
     654:	1b 82       	std	Y+3, r1	; 0x03
     656:	1a 82       	std	Y+2, r1	; 0x02
    for (i = 0; i < dsize; i++)
     658:	19 82       	std	Y+1, r1	; 0x01
     65a:	14 c0       	rjmp	.+40     	; 0x684 <is_checksum_valid+0x4c>
        sum += ((unsigned char *)data)[i];
     65c:	89 81       	ldd	r24, Y+1	; 0x01
     65e:	88 2f       	mov	r24, r24
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	2c 81       	ldd	r18, Y+4	; 0x04
     664:	3d 81       	ldd	r19, Y+5	; 0x05
     666:	82 0f       	add	r24, r18
     668:	93 1f       	adc	r25, r19
     66a:	fc 01       	movw	r30, r24
     66c:	80 81       	ld	r24, Z
     66e:	88 2f       	mov	r24, r24
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	2a 81       	ldd	r18, Y+2	; 0x02
     674:	3b 81       	ldd	r19, Y+3	; 0x03
     676:	82 0f       	add	r24, r18
     678:	93 1f       	adc	r25, r19
     67a:	9b 83       	std	Y+3, r25	; 0x03
     67c:	8a 83       	std	Y+2, r24	; 0x02
 *   none
 */
int is_checksum_valid(unsigned char *data, unsigned int dsize){
    unsigned char i;
    unsigned sum = 0;
    for (i = 0; i < dsize; i++)
     67e:	89 81       	ldd	r24, Y+1	; 0x01
     680:	8f 5f       	subi	r24, 0xFF	; 255
     682:	89 83       	std	Y+1, r24	; 0x01
     684:	89 81       	ldd	r24, Y+1	; 0x01
     686:	28 2f       	mov	r18, r24
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	8e 81       	ldd	r24, Y+6	; 0x06
     68c:	9f 81       	ldd	r25, Y+7	; 0x07
     68e:	28 17       	cp	r18, r24
     690:	39 07       	cpc	r19, r25
     692:	20 f3       	brcs	.-56     	; 0x65c <is_checksum_valid+0x24>
        sum += ((unsigned char *)data)[i];
    return (sum == 0);
     694:	21 e0       	ldi	r18, 0x01	; 1
     696:	8a 81       	ldd	r24, Y+2	; 0x02
     698:	9b 81       	ldd	r25, Y+3	; 0x03
     69a:	89 2b       	or	r24, r25
     69c:	09 f0       	breq	.+2      	; 0x6a0 <is_checksum_valid+0x68>
     69e:	20 e0       	ldi	r18, 0x00	; 0
     6a0:	82 2f       	mov	r24, r18
     6a2:	90 e0       	ldi	r25, 0x00	; 0
}
     6a4:	27 96       	adiw	r28, 0x07	; 7
     6a6:	0f b6       	in	r0, 0x3f	; 63
     6a8:	f8 94       	cli
     6aa:	de bf       	out	0x3e, r29	; 62
     6ac:	0f be       	out	0x3f, r0	; 63
     6ae:	cd bf       	out	0x3d, r28	; 61
     6b0:	df 91       	pop	r29
     6b2:	cf 91       	pop	r28
     6b4:	08 95       	ret

000006b6 <vpd_init>:
 *   nothing
 *
 * changes:
 *   EEPROM
 */
void vpd_init(){
     6b6:	cf 93       	push	r28
     6b8:	df 93       	push	r29
     6ba:	cd b7       	in	r28, 0x3d	; 61
     6bc:	de b7       	in	r29, 0x3e	; 62
    // while busy, wait
    while(eeprom_isbusy()){}
     6be:	00 00       	nop
     6c0:	0e 94 06 02 	call	0x40c	; 0x40c <eeprom_isbusy>
     6c4:	89 2b       	or	r24, r25
     6c6:	e1 f7       	brne	.-8      	; 0x6c0 <vpd_init+0xa>
    // initialize vpd data with eeprom.readbuf()
    eeprom_readbuf(0x0, (unsigned char *)defaults, sizeof(*defaults) - 1);
     6c8:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     6cc:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     6d0:	46 e3       	ldi	r20, 0x36	; 54
     6d2:	bc 01       	movw	r22, r24
     6d4:	80 e0       	ldi	r24, 0x00	; 0
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	0e 94 b8 01 	call	0x370	; 0x370 <eeprom_readbuf>
    if(!vpd_is_data_valid()){
     6dc:	0e 94 82 03 	call	0x704	; 0x704 <vpd_is_data_valid>
     6e0:	89 2b       	or	r24, r25
     6e2:	61 f4       	brne	.+24     	; 0x6fc <vpd_init+0x46>
        vpd_write_defaults();
     6e4:	0e 94 b8 03 	call	0x770	; 0x770 <vpd_write_defaults>
        eeprom_readbuf(0x0, (unsigned char *)defaults, sizeof(*defaults) - 1);
     6e8:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     6ec:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     6f0:	46 e3       	ldi	r20, 0x36	; 54
     6f2:	bc 01       	movw	r22, r24
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	0e 94 b8 01 	call	0x370	; 0x370 <eeprom_readbuf>
    }
}
     6fc:	00 00       	nop
     6fe:	df 91       	pop	r29
     700:	cf 91       	pop	r28
     702:	08 95       	ret

00000704 <vpd_is_data_valid>:
 *   int - validation boolean
 *
 * changes:
 *   none
 */
int vpd_is_data_valid(){
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
     708:	00 d0       	rcall	.+0      	; 0x70a <vpd_is_data_valid+0x6>
     70a:	cd b7       	in	r28, 0x3d	; 61
     70c:	de b7       	in	r29, 0x3e	; 62
    int result = 1;
     70e:	81 e0       	ldi	r24, 0x01	; 1
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	9a 83       	std	Y+2, r25	; 0x02
     714:	89 83       	std	Y+1, r24	; 0x01
    if(vpd->token[0] != 'S' || vpd->token[1] != 'E' || vpd->token[2] != 'R')
     716:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <vpd>
     71a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <vpd+0x1>
     71e:	fc 01       	movw	r30, r24
     720:	80 81       	ld	r24, Z
     722:	83 35       	cpi	r24, 0x53	; 83
     724:	81 f4       	brne	.+32     	; 0x746 <vpd_is_data_valid+0x42>
     726:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <vpd>
     72a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <vpd+0x1>
     72e:	fc 01       	movw	r30, r24
     730:	81 81       	ldd	r24, Z+1	; 0x01
     732:	85 34       	cpi	r24, 0x45	; 69
     734:	41 f4       	brne	.+16     	; 0x746 <vpd_is_data_valid+0x42>
     736:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <vpd>
     73a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <vpd+0x1>
     73e:	fc 01       	movw	r30, r24
     740:	82 81       	ldd	r24, Z+2	; 0x02
     742:	82 35       	cpi	r24, 0x52	; 82
     744:	11 f0       	breq	.+4      	; 0x74a <vpd_is_data_valid+0x46>
        result = 0;
     746:	1a 82       	std	Y+2, r1	; 0x02
     748:	19 82       	std	Y+1, r1	; 0x01
    if(!is_checksum_valid((unsigned char *)vpd, sizeof(*vpd)))
     74a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <vpd>
     74e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <vpd+0x1>
     752:	67 e3       	ldi	r22, 0x37	; 55
     754:	70 e0       	ldi	r23, 0x00	; 0
     756:	0e 94 1c 03 	call	0x638	; 0x638 <is_checksum_valid>
     75a:	89 2b       	or	r24, r25
     75c:	11 f4       	brne	.+4      	; 0x762 <vpd_is_data_valid+0x5e>
        result = 0;
     75e:	1a 82       	std	Y+2, r1	; 0x02
     760:	19 82       	std	Y+1, r1	; 0x01
    return result;
     762:	89 81       	ldd	r24, Y+1	; 0x01
     764:	9a 81       	ldd	r25, Y+2	; 0x02
}
     766:	0f 90       	pop	r0
     768:	0f 90       	pop	r0
     76a:	df 91       	pop	r29
     76c:	cf 91       	pop	r28
     76e:	08 95       	ret

00000770 <vpd_write_defaults>:
 *   nothing
 *
 * changes:
 *   EEPROM
 */
void vpd_write_defaults(){
     770:	cf 93       	push	r28
     772:	df 93       	push	r29
     774:	cd b7       	in	r28, 0x3d	; 61
     776:	de b7       	in	r29, 0x3e	; 62
    defaults->token[0] = 'S';
     778:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     77c:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     780:	23 e5       	ldi	r18, 0x53	; 83
     782:	fc 01       	movw	r30, r24
     784:	20 83       	st	Z, r18
    defaults->token[1] = 'E';
     786:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     78a:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     78e:	25 e4       	ldi	r18, 0x45	; 69
     790:	fc 01       	movw	r30, r24
     792:	21 83       	std	Z+1, r18	; 0x01
    defaults->token[2] = 'R';
     794:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     798:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     79c:	22 e5       	ldi	r18, 0x52	; 82
     79e:	fc 01       	movw	r30, r24
     7a0:	22 83       	std	Z+2, r18	; 0x02
    defaults->token[3] = '\0';
     7a2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     7a6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     7aa:	fc 01       	movw	r30, r24
     7ac:	13 82       	std	Z+3, r1	; 0x03
    defaults->model[0] = 'A';
     7ae:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     7b2:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     7b6:	21 e4       	ldi	r18, 0x41	; 65
     7b8:	fc 01       	movw	r30, r24
     7ba:	24 83       	std	Z+4, r18	; 0x04
    defaults->model[1] = 'n';
     7bc:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     7c0:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     7c4:	2e e6       	ldi	r18, 0x6E	; 110
     7c6:	fc 01       	movw	r30, r24
     7c8:	25 83       	std	Z+5, r18	; 0x05
    defaults->model[2] = 'd';
     7ca:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     7ce:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     7d2:	24 e6       	ldi	r18, 0x64	; 100
     7d4:	fc 01       	movw	r30, r24
     7d6:	26 83       	std	Z+6, r18	; 0x06
    defaults->model[3] = 'r';
     7d8:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     7dc:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     7e0:	22 e7       	ldi	r18, 0x72	; 114
     7e2:	fc 01       	movw	r30, r24
     7e4:	27 83       	std	Z+7, r18	; 0x07
    defaults->model[4] = 'e';
     7e6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     7ea:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     7ee:	25 e6       	ldi	r18, 0x65	; 101
     7f0:	fc 01       	movw	r30, r24
     7f2:	20 87       	std	Z+8, r18	; 0x08
    defaults->model[5] = 'w';
     7f4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     7f8:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     7fc:	27 e7       	ldi	r18, 0x77	; 119
     7fe:	fc 01       	movw	r30, r24
     800:	21 87       	std	Z+9, r18	; 0x09
    defaults->model[6] = '\0';
     802:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     806:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     80a:	fc 01       	movw	r30, r24
     80c:	12 86       	std	Z+10, r1	; 0x0a
    defaults->manufacturer[0] = 'G';
     80e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     812:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     816:	27 e4       	ldi	r18, 0x47	; 71
     818:	fc 01       	movw	r30, r24
     81a:	20 8b       	std	Z+16, r18	; 0x10
    defaults->manufacturer[1] = 'o';
     81c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     820:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     824:	2f e6       	ldi	r18, 0x6F	; 111
     826:	fc 01       	movw	r30, r24
     828:	21 8b       	std	Z+17, r18	; 0x11
    defaults->manufacturer[2] = 'o';
     82a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     82e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     832:	2f e6       	ldi	r18, 0x6F	; 111
     834:	fc 01       	movw	r30, r24
     836:	22 8b       	std	Z+18, r18	; 0x12
    defaults->manufacturer[3] = 'd';
     838:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     83c:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     840:	24 e6       	ldi	r18, 0x64	; 100
     842:	fc 01       	movw	r30, r24
     844:	23 8b       	std	Z+19, r18	; 0x13
    defaults->manufacturer[4] = 'm';
     846:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     84a:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     84e:	2d e6       	ldi	r18, 0x6D	; 109
     850:	fc 01       	movw	r30, r24
     852:	24 8b       	std	Z+20, r18	; 0x14
    defaults->manufacturer[5] = 'a';
     854:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     858:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     85c:	21 e6       	ldi	r18, 0x61	; 97
     85e:	fc 01       	movw	r30, r24
     860:	25 8b       	std	Z+21, r18	; 0x15
    defaults->manufacturer[6] = 'n';
     862:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     866:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     86a:	2e e6       	ldi	r18, 0x6E	; 110
     86c:	fc 01       	movw	r30, r24
     86e:	26 8b       	std	Z+22, r18	; 0x16
    defaults->manufacturer[7] = '\0';
     870:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     874:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     878:	fc 01       	movw	r30, r24
     87a:	17 8a       	std	Z+23, r1	; 0x17
    defaults->serial_number[0] = '4';
     87c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     880:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     884:	24 e3       	ldi	r18, 0x34	; 52
     886:	fc 01       	movw	r30, r24
     888:	24 8f       	std	Z+28, r18	; 0x1c
    defaults->serial_number[1] = '2';
     88a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     88e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     892:	22 e3       	ldi	r18, 0x32	; 50
     894:	fc 01       	movw	r30, r24
     896:	25 8f       	std	Z+29, r18	; 0x1d
    defaults->serial_number[2] = '\0';
     898:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     89c:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     8a0:	fc 01       	movw	r30, r24
     8a2:	16 8e       	std	Z+30, r1	; 0x1e
    defaults->manufacure_date = 0;
     8a4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     8a8:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     8ac:	fc 01       	movw	r30, r24
     8ae:	10 a6       	std	Z+40, r1	; 0x28
     8b0:	11 a6       	std	Z+41, r1	; 0x29
     8b2:	12 a6       	std	Z+42, r1	; 0x2a
     8b4:	13 a6       	std	Z+43, r1	; 0x2b
    defaults->mac_address[0] = (0x41 & 0xFE);
     8b6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     8ba:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     8be:	20 e4       	ldi	r18, 0x40	; 64
     8c0:	fc 01       	movw	r30, r24
     8c2:	24 a7       	std	Z+44, r18	; 0x2c
    defaults->mac_address[1] = 0x6E;
     8c4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     8c8:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     8cc:	2e e6       	ldi	r18, 0x6E	; 110
     8ce:	fc 01       	movw	r30, r24
     8d0:	25 a7       	std	Z+45, r18	; 0x2d
    defaults->mac_address[2] = 0x64;
     8d2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     8d6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     8da:	24 e6       	ldi	r18, 0x64	; 100
     8dc:	fc 01       	movw	r30, r24
     8de:	26 a7       	std	Z+46, r18	; 0x2e
    defaults->mac_address[3] = 0x47;
     8e0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     8e4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     8e8:	27 e4       	ldi	r18, 0x47	; 71
     8ea:	fc 01       	movw	r30, r24
     8ec:	27 a7       	std	Z+47, r18	; 0x2f
    defaults->mac_address[4] = 0x6F;
     8ee:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     8f2:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     8f6:	2f e6       	ldi	r18, 0x6F	; 111
     8f8:	fc 01       	movw	r30, r24
     8fa:	20 ab       	std	Z+48, r18	; 0x30
    defaults->mac_address[5] = 0x6F;
     8fc:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     900:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     904:	2f e6       	ldi	r18, 0x6F	; 111
     906:	fc 01       	movw	r30, r24
     908:	21 ab       	std	Z+49, r18	; 0x31
    defaults->country_of_origin[0] = 'U';
     90a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     90e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     912:	25 e5       	ldi	r18, 0x55	; 85
     914:	fc 01       	movw	r30, r24
     916:	22 ab       	std	Z+50, r18	; 0x32
    defaults->country_of_origin[1] = 'S';
     918:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     91c:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     920:	23 e5       	ldi	r18, 0x53	; 83
     922:	fc 01       	movw	r30, r24
     924:	23 ab       	std	Z+51, r18	; 0x33
    defaults->country_of_origin[2] = 'A';
     926:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     92a:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     92e:	21 e4       	ldi	r18, 0x41	; 65
     930:	fc 01       	movw	r30, r24
     932:	24 ab       	std	Z+52, r18	; 0x34
    defaults->country_of_origin[3] = '\0';
     934:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     938:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     93c:	fc 01       	movw	r30, r24
     93e:	15 aa       	std	Z+53, r1	; 0x35
    defaults->checksum = 0;
     940:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     944:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     948:	fc 01       	movw	r30, r24
     94a:	16 aa       	std	Z+54, r1	; 0x36
    update_checksum((unsigned char *)defaults, sizeof(*defaults));
     94c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     950:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     954:	67 e3       	ldi	r22, 0x37	; 55
     956:	70 e0       	ldi	r23, 0x00	; 0
     958:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <update_checksum>
    eeprom_writebuf(0x0, (unsigned char *)defaults, sizeof(*defaults));
     95c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <defaults>
     960:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <defaults+0x1>
     964:	47 e3       	ldi	r20, 0x37	; 55
     966:	bc 01       	movw	r22, r24
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	0e 94 62 01 	call	0x2c4	; 0x2c4 <eeprom_writebuf>
}
     970:	00 00       	nop
     972:	df 91       	pop	r29
     974:	cf 91       	pop	r28
     976:	08 95       	ret

00000978 <led_set_blink>:
     978:	90 93 8a 02 	sts	0x028A, r25	; 0x80028a <blink_msg+0x1>
     97c:	80 93 89 02 	sts	0x0289, r24	; 0x800289 <blink_msg>
     980:	10 92 8d 02 	sts	0x028D, r1	; 0x80028d <blink_pos+0x1>
     984:	10 92 8c 02 	sts	0x028C, r1	; 0x80028c <blink_pos>
     988:	10 92 8b 02 	sts	0x028B, r1	; 0x80028b <blink_state>
     98c:	60 e0       	ldi	r22, 0x00	; 0
     98e:	70 e0       	ldi	r23, 0x00	; 0
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	0e 94 cb 0c 	call	0x1996	; 0x1996 <delay_set>
     998:	0c 94 2d 05 	jmp	0xa5a	; 0xa5a <led_off>

0000099c <led_update>:
     99c:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <blink_msg>
     9a0:	90 91 8a 02 	lds	r25, 0x028A	; 0x80028a <blink_msg+0x1>
     9a4:	89 2b       	or	r24, r25
     9a6:	09 f4       	brne	.+2      	; 0x9aa <led_update+0xe>
     9a8:	52 c0       	rjmp	.+164    	; 0xa4e <led_update+0xb2>
     9aa:	80 e0       	ldi	r24, 0x00	; 0
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	0e 94 b2 0c 	call	0x1964	; 0x1964 <delay_isdone>
     9b2:	89 2b       	or	r24, r25
     9b4:	09 f4       	brne	.+2      	; 0x9b8 <led_update+0x1c>
     9b6:	4b c0       	rjmp	.+150    	; 0xa4e <led_update+0xb2>
     9b8:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <blink_state>
     9bc:	81 11       	cpse	r24, r1
     9be:	34 c0       	rjmp	.+104    	; 0xa28 <led_update+0x8c>
     9c0:	20 91 8c 02 	lds	r18, 0x028C	; 0x80028c <blink_pos>
     9c4:	30 91 8d 02 	lds	r19, 0x028D	; 0x80028d <blink_pos+0x1>
     9c8:	e0 91 89 02 	lds	r30, 0x0289	; 0x800289 <blink_msg>
     9cc:	f0 91 8a 02 	lds	r31, 0x028A	; 0x80028a <blink_msg+0x1>
     9d0:	e2 0f       	add	r30, r18
     9d2:	f3 1f       	adc	r31, r19
     9d4:	80 81       	ld	r24, Z
     9d6:	80 32       	cpi	r24, 0x20	; 32
     9d8:	e9 f0       	breq	.+58     	; 0xa14 <led_update+0x78>
     9da:	3c f4       	brge	.+14     	; 0x9ea <led_update+0x4e>
     9dc:	81 11       	cpse	r24, r1
     9de:	1d c0       	rjmp	.+58     	; 0xa1a <led_update+0x7e>
     9e0:	10 92 8d 02 	sts	0x028D, r1	; 0x80028d <blink_pos+0x1>
     9e4:	10 92 8c 02 	sts	0x028C, r1	; 0x80028c <blink_pos>
     9e8:	08 95       	ret
     9ea:	8d 32       	cpi	r24, 0x2D	; 45
     9ec:	39 f0       	breq	.+14     	; 0x9fc <led_update+0x60>
     9ee:	8e 32       	cpi	r24, 0x2E	; 46
     9f0:	a1 f4       	brne	.+40     	; 0xa1a <led_update+0x7e>
     9f2:	0e 94 2b 05 	call	0xa56	; 0xa56 <led_on>
     9f6:	6a ef       	ldi	r22, 0xFA	; 250
     9f8:	70 e0       	ldi	r23, 0x00	; 0
     9fa:	04 c0       	rjmp	.+8      	; 0xa04 <led_update+0x68>
     9fc:	0e 94 2b 05 	call	0xa56	; 0xa56 <led_on>
     a00:	6e ee       	ldi	r22, 0xEE	; 238
     a02:	72 e0       	ldi	r23, 0x02	; 2
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	0e 94 cb 0c 	call	0x1996	; 0x1996 <delay_set>
     a0c:	81 e0       	ldi	r24, 0x01	; 1
     a0e:	80 93 8b 02 	sts	0x028B, r24	; 0x80028b <blink_state>
     a12:	08 95       	ret
     a14:	68 ee       	ldi	r22, 0xE8	; 232
     a16:	73 e0       	ldi	r23, 0x03	; 3
     a18:	0b c0       	rjmp	.+22     	; 0xa30 <led_update+0x94>
     a1a:	2f 5f       	subi	r18, 0xFF	; 255
     a1c:	3f 4f       	sbci	r19, 0xFF	; 255
     a1e:	30 93 8d 02 	sts	0x028D, r19	; 0x80028d <blink_pos+0x1>
     a22:	20 93 8c 02 	sts	0x028C, r18	; 0x80028c <blink_pos>
     a26:	08 95       	ret
     a28:	0e 94 2d 05 	call	0xa5a	; 0xa5a <led_off>
     a2c:	64 e6       	ldi	r22, 0x64	; 100
     a2e:	70 e0       	ldi	r23, 0x00	; 0
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	0e 94 cb 0c 	call	0x1996	; 0x1996 <delay_set>
     a38:	10 92 8b 02 	sts	0x028B, r1	; 0x80028b <blink_state>
     a3c:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <blink_pos>
     a40:	90 91 8d 02 	lds	r25, 0x028D	; 0x80028d <blink_pos+0x1>
     a44:	01 96       	adiw	r24, 0x01	; 1
     a46:	90 93 8d 02 	sts	0x028D, r25	; 0x80028d <blink_pos+0x1>
     a4a:	80 93 8c 02 	sts	0x028C, r24	; 0x80028c <blink_pos>
     a4e:	08 95       	ret

00000a50 <led_init>:
     a50:	21 9a       	sbi	0x04, 1	; 4
     a52:	29 98       	cbi	0x05, 1	; 5
     a54:	08 95       	ret

00000a56 <led_on>:
     a56:	29 9a       	sbi	0x05, 1	; 5
     a58:	08 95       	ret

00000a5a <led_off>:
     a5a:	29 98       	cbi	0x05, 1	; 5
     a5c:	08 95       	ret

00000a5e <led_is_on>:
     a5e:	85 b1       	in	r24, 0x05	; 5
     a60:	86 95       	lsr	r24
     a62:	81 70       	andi	r24, 0x01	; 1
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	08 95       	ret

00000a68 <log_is_data_valid>:
     a68:	80 31       	cpi	r24, 0x10	; 16
     a6a:	91 05       	cpc	r25, r1
     a6c:	04 f5       	brge	.+64     	; 0xaae <log_is_data_valid+0x46>
     a6e:	27 e0       	ldi	r18, 0x07	; 7
     a70:	28 9f       	mul	r18, r24
     a72:	a0 01       	movw	r20, r0
     a74:	29 9f       	mul	r18, r25
     a76:	50 0d       	add	r21, r0
     a78:	11 24       	eor	r1, r1
     a7a:	fa 01       	movw	r30, r20
     a7c:	ef 56       	subi	r30, 0x6F	; 111
     a7e:	fd 4f       	sbci	r31, 0xFD	; 253
     a80:	80 81       	ld	r24, Z
     a82:	81 32       	cpi	r24, 0x21	; 33
     a84:	a0 f4       	brcc	.+40     	; 0xaae <log_is_data_valid+0x46>
     a86:	80 e0       	ldi	r24, 0x00	; 0
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	20 e0       	ldi	r18, 0x00	; 0
     a8c:	fa 01       	movw	r30, r20
     a8e:	e8 0f       	add	r30, r24
     a90:	f9 1f       	adc	r31, r25
     a92:	ef 56       	subi	r30, 0x6F	; 111
     a94:	fd 4f       	sbci	r31, 0xFD	; 253
     a96:	30 81       	ld	r19, Z
     a98:	23 0f       	add	r18, r19
     a9a:	01 96       	adiw	r24, 0x01	; 1
     a9c:	87 30       	cpi	r24, 0x07	; 7
     a9e:	91 05       	cpc	r25, r1
     aa0:	a9 f7       	brne	.-22     	; 0xa8c <log_is_data_valid+0x24>
     aa2:	81 e0       	ldi	r24, 0x01	; 1
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	22 23       	and	r18, r18
     aa8:	21 f0       	breq	.+8      	; 0xab2 <log_is_data_valid+0x4a>
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	08 95       	ret
     aae:	80 e0       	ldi	r24, 0x00	; 0
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	08 95       	ret

00000ab4 <log_init>:
     ab4:	6f 92       	push	r6
     ab6:	7f 92       	push	r7
     ab8:	8f 92       	push	r8
     aba:	9f 92       	push	r9
     abc:	af 92       	push	r10
     abe:	bf 92       	push	r11
     ac0:	cf 92       	push	r12
     ac2:	df 92       	push	r13
     ac4:	ef 92       	push	r14
     ac6:	ff 92       	push	r15
     ac8:	0f 93       	push	r16
     aca:	1f 93       	push	r17
     acc:	cf 93       	push	r28
     ace:	df 93       	push	r29
     ad0:	0e 94 06 02 	call	0x40c	; 0x40c <eeprom_isbusy>
     ad4:	89 2b       	or	r24, r25
     ad6:	e1 f7       	brne	.-8      	; 0xad0 <log_init+0x1c>
     ad8:	01 e0       	ldi	r16, 0x01	; 1
     ada:	13 e0       	ldi	r17, 0x03	; 3
     adc:	c0 e8       	ldi	r28, 0x80	; 128
     ade:	d0 e0       	ldi	r29, 0x00	; 0
     ae0:	be 01       	movw	r22, r28
     ae2:	6f 5e       	subi	r22, 0xEF	; 239
     ae4:	7d 4f       	sbci	r23, 0xFD	; 253
     ae6:	47 e0       	ldi	r20, 0x07	; 7
     ae8:	ce 01       	movw	r24, r28
     aea:	0e 94 b8 01 	call	0x370	; 0x370 <eeprom_readbuf>
     aee:	f8 01       	movw	r30, r16
     af0:	11 92       	st	Z+, r1
     af2:	8f 01       	movw	r16, r30
     af4:	27 96       	adiw	r28, 0x07	; 7
     af6:	c0 3f       	cpi	r28, 0xF0	; 240
     af8:	d1 05       	cpc	r29, r1
     afa:	91 f7       	brne	.-28     	; 0xae0 <log_init+0x2c>
     afc:	41 e9       	ldi	r20, 0x91	; 145
     afe:	e4 2e       	mov	r14, r20
     b00:	42 e0       	ldi	r20, 0x02	; 2
     b02:	f4 2e       	mov	r15, r20
     b04:	87 01       	movw	r16, r14
     b06:	c0 e0       	ldi	r28, 0x00	; 0
     b08:	d0 e0       	ldi	r29, 0x00	; 0
     b0a:	d1 2c       	mov	r13, r1
     b0c:	b1 2c       	mov	r11, r1
     b0e:	77 24       	eor	r7, r7
     b10:	7a 94       	dec	r7
     b12:	ce 01       	movw	r24, r28
     b14:	0e 94 34 05 	call	0xa68	; 0xa68 <log_is_data_valid>
     b18:	89 2b       	or	r24, r25
     b1a:	41 f0       	breq	.+16     	; 0xb2c <log_init+0x78>
     b1c:	f8 01       	movw	r30, r16
     b1e:	80 81       	ld	r24, Z
     b20:	87 15       	cp	r24, r7
     b22:	20 f4       	brcc	.+8      	; 0xb2c <log_init+0x78>
     b24:	bc 2e       	mov	r11, r28
     b26:	78 2e       	mov	r7, r24
     b28:	dd 24       	eor	r13, r13
     b2a:	d3 94       	inc	r13
     b2c:	21 96       	adiw	r28, 0x01	; 1
     b2e:	09 5f       	subi	r16, 0xF9	; 249
     b30:	1f 4f       	sbci	r17, 0xFF	; 255
     b32:	c0 31       	cpi	r28, 0x10	; 16
     b34:	d1 05       	cpc	r29, r1
     b36:	69 f7       	brne	.-38     	; 0xb12 <log_init+0x5e>
     b38:	dd 20       	and	r13, r13
     b3a:	09 f4       	brne	.+2      	; 0xb3e <log_init+0x8a>
     b3c:	6a c0       	rjmp	.+212    	; 0xc12 <log_init+0x15e>
     b3e:	b0 92 90 02 	sts	0x0290, r11	; 0x800290 <last_written>
     b42:	70 92 8f 02 	sts	0x028F, r7	; 0x80028f <last_transaction_written>
     b46:	cb 2d       	mov	r28, r11
     b48:	d0 e0       	ldi	r29, 0x00	; 0
     b4a:	8e 01       	movw	r16, r28
     b4c:	0f 5f       	subi	r16, 0xFF	; 255
     b4e:	1f 4f       	sbci	r17, 0xFF	; 255
     b50:	87 2c       	mov	r8, r7
     b52:	2f e0       	ldi	r18, 0x0F	; 15
     b54:	a2 2e       	mov	r10, r18
     b56:	37 e0       	ldi	r19, 0x07	; 7
     b58:	93 2e       	mov	r9, r19
     b5a:	68 01       	movw	r12, r16
     b5c:	ff e0       	ldi	r31, 0x0F	; 15
     b5e:	cf 22       	and	r12, r31
     b60:	dd 24       	eor	r13, r13
     b62:	c6 01       	movw	r24, r12
     b64:	0e 94 34 05 	call	0xa68	; 0xa68 <log_is_data_valid>
     b68:	89 2b       	or	r24, r25
     b6a:	61 f4       	brne	.+24     	; 0xb84 <log_init+0xd0>
     b6c:	b0 92 8e 02 	sts	0x028E, r11	; 0x80028e <tail>
     b70:	8e 01       	movw	r16, r28
     b72:	01 50       	subi	r16, 0x01	; 1
     b74:	11 09       	sbc	r17, r1
     b76:	60 97       	sbiw	r28, 0x10	; 16
     b78:	80 e1       	ldi	r24, 0x10	; 16
     b7a:	a8 2e       	mov	r10, r24
     b7c:	b1 2c       	mov	r11, r1
     b7e:	97 e0       	ldi	r25, 0x07	; 7
     b80:	69 2e       	mov	r6, r25
     b82:	3a c0       	rjmp	.+116    	; 0xbf8 <log_init+0x144>
     b84:	9c 9c       	mul	r9, r12
     b86:	f0 01       	movw	r30, r0
     b88:	9d 9c       	mul	r9, r13
     b8a:	f0 0d       	add	r31, r0
     b8c:	11 24       	eor	r1, r1
     b8e:	ef 56       	subi	r30, 0x6F	; 111
     b90:	fd 4f       	sbci	r31, 0xFD	; 253
     b92:	40 81       	ld	r20, Z
     b94:	24 2f       	mov	r18, r20
     b96:	30 e0       	ldi	r19, 0x00	; 0
     b98:	88 2d       	mov	r24, r8
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	01 96       	adiw	r24, 0x01	; 1
     b9e:	8f 71       	andi	r24, 0x1F	; 31
     ba0:	99 27       	eor	r25, r25
     ba2:	28 17       	cp	r18, r24
     ba4:	39 07       	cpc	r19, r25
     ba6:	11 f7       	brne	.-60     	; 0xb6c <log_init+0xb8>
     ba8:	c0 92 90 02 	sts	0x0290, r12	; 0x800290 <last_written>
     bac:	40 93 8f 02 	sts	0x028F, r20	; 0x80028f <last_transaction_written>
     bb0:	aa 94       	dec	r10
     bb2:	0f 5f       	subi	r16, 0xFF	; 255
     bb4:	1f 4f       	sbci	r17, 0xFF	; 255
     bb6:	aa 20       	and	r10, r10
     bb8:	c9 f2       	breq	.-78     	; 0xb6c <log_init+0xb8>
     bba:	84 2e       	mov	r8, r20
     bbc:	ce cf       	rjmp	.-100    	; 0xb5a <log_init+0xa6>
     bbe:	f7 01       	movw	r30, r14
     bc0:	20 81       	ld	r18, Z
     bc2:	30 e0       	ldi	r19, 0x00	; 0
     bc4:	87 2d       	mov	r24, r7
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	4f 96       	adiw	r24, 0x1f	; 31
     bca:	8f 71       	andi	r24, 0x1F	; 31
     bcc:	99 27       	eor	r25, r25
     bce:	28 17       	cp	r18, r24
     bd0:	39 07       	cpc	r19, r25
     bd2:	31 f5       	brne	.+76     	; 0xc20 <log_init+0x16c>
     bd4:	c0 92 8e 02 	sts	0x028E, r12	; 0x80028e <tail>
     bd8:	68 9c       	mul	r6, r8
     bda:	f0 01       	movw	r30, r0
     bdc:	69 9c       	mul	r6, r9
     bde:	f0 0d       	add	r31, r0
     be0:	11 24       	eor	r1, r1
     be2:	ef 56       	subi	r30, 0x6F	; 111
     be4:	fd 4f       	sbci	r31, 0xFD	; 253
     be6:	70 80       	ld	r7, Z
     be8:	01 50       	subi	r16, 0x01	; 1
     bea:	11 09       	sbc	r17, r1
     bec:	f7 e0       	ldi	r31, 0x07	; 7
     bee:	ef 0e       	add	r14, r31
     bf0:	f1 1c       	adc	r15, r1
     bf2:	0c 17       	cp	r16, r28
     bf4:	1d 07       	cpc	r17, r29
     bf6:	a1 f0       	breq	.+40     	; 0xc20 <log_init+0x16c>
     bf8:	c8 01       	movw	r24, r16
     bfa:	b5 01       	movw	r22, r10
     bfc:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <__divmodhi4>
     c00:	6c 01       	movw	r12, r24
     c02:	4c 01       	movw	r8, r24
     c04:	99 24       	eor	r9, r9
     c06:	c4 01       	movw	r24, r8
     c08:	0e 94 34 05 	call	0xa68	; 0xa68 <log_is_data_valid>
     c0c:	89 2b       	or	r24, r25
     c0e:	b9 f6       	brne	.-82     	; 0xbbe <log_init+0x10a>
     c10:	07 c0       	rjmp	.+14     	; 0xc20 <log_init+0x16c>
     c12:	8f e0       	ldi	r24, 0x0F	; 15
     c14:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <last_written>
     c18:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <last_transaction_written>
     c1c:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <tail>
     c20:	df 91       	pop	r29
     c22:	cf 91       	pop	r28
     c24:	1f 91       	pop	r17
     c26:	0f 91       	pop	r16
     c28:	ff 90       	pop	r15
     c2a:	ef 90       	pop	r14
     c2c:	df 90       	pop	r13
     c2e:	cf 90       	pop	r12
     c30:	bf 90       	pop	r11
     c32:	af 90       	pop	r10
     c34:	9f 90       	pop	r9
     c36:	8f 90       	pop	r8
     c38:	7f 90       	pop	r7
     c3a:	6f 90       	pop	r6
     c3c:	08 95       	ret

00000c3e <log_update>:
     c3e:	ef 92       	push	r14
     c40:	ff 92       	push	r15
     c42:	1f 93       	push	r17
     c44:	cf 93       	push	r28
     c46:	df 93       	push	r29
     c48:	0e 94 06 02 	call	0x40c	; 0x40c <eeprom_isbusy>
     c4c:	89 2b       	or	r24, r25
     c4e:	39 f5       	brne	.+78     	; 0xc9e <log_update+0x60>
     c50:	e1 e0       	ldi	r30, 0x01	; 1
     c52:	f3 e0       	ldi	r31, 0x03	; 3
     c54:	c0 e0       	ldi	r28, 0x00	; 0
     c56:	d0 e0       	ldi	r29, 0x00	; 0
     c58:	81 91       	ld	r24, Z+
     c5a:	88 23       	and	r24, r24
     c5c:	e1 f0       	breq	.+56     	; 0xc96 <log_update+0x58>
     c5e:	17 e0       	ldi	r17, 0x07	; 7
     c60:	1c 9f       	mul	r17, r28
     c62:	c0 01       	movw	r24, r0
     c64:	1d 9f       	mul	r17, r29
     c66:	90 0d       	add	r25, r0
     c68:	11 24       	eor	r1, r1
     c6a:	9c 01       	movw	r18, r24
     c6c:	2f 56       	subi	r18, 0x6F	; 111
     c6e:	3d 4f       	sbci	r19, 0xFD	; 253
     c70:	79 01       	movw	r14, r18
     c72:	67 e0       	ldi	r22, 0x07	; 7
     c74:	70 e0       	ldi	r23, 0x00	; 0
     c76:	c9 01       	movw	r24, r18
     c78:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <update_checksum>
     c7c:	c1 9f       	mul	r28, r17
     c7e:	c0 01       	movw	r24, r0
     c80:	11 24       	eor	r1, r1
     c82:	47 e0       	ldi	r20, 0x07	; 7
     c84:	b7 01       	movw	r22, r14
     c86:	80 58       	subi	r24, 0x80	; 128
     c88:	9f 4f       	sbci	r25, 0xFF	; 255
     c8a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <eeprom_writebuf>
     c8e:	cf 5f       	subi	r28, 0xFF	; 255
     c90:	dc 4f       	sbci	r29, 0xFC	; 252
     c92:	18 82       	st	Y, r1
     c94:	04 c0       	rjmp	.+8      	; 0xc9e <log_update+0x60>
     c96:	21 96       	adiw	r28, 0x01	; 1
     c98:	c0 31       	cpi	r28, 0x10	; 16
     c9a:	d1 05       	cpc	r29, r1
     c9c:	e9 f6       	brne	.-70     	; 0xc58 <log_update+0x1a>
     c9e:	df 91       	pop	r29
     ca0:	cf 91       	pop	r28
     ca2:	1f 91       	pop	r17
     ca4:	ff 90       	pop	r15
     ca6:	ef 90       	pop	r14
     ca8:	08 95       	ret

00000caa <log_add_record>:
     caa:	ef 92       	push	r14
     cac:	ff 92       	push	r15
     cae:	0f 93       	push	r16
     cb0:	1f 93       	push	r17
     cb2:	cf 93       	push	r28
     cb4:	df 93       	push	r29
     cb6:	e8 2e       	mov	r14, r24
     cb8:	c0 91 90 02 	lds	r28, 0x0290	; 0x800290 <last_written>
     cbc:	d0 e0       	ldi	r29, 0x00	; 0
     cbe:	21 96       	adiw	r28, 0x01	; 1
     cc0:	cf 70       	andi	r28, 0x0F	; 15
     cc2:	dd 27       	eor	r29, r29
     cc4:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <tail>
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	0e 94 34 05 	call	0xa68	; 0xa68 <log_is_data_valid>
     cce:	f8 2e       	mov	r15, r24
     cd0:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <last_transaction_written>
     cd4:	8f 5f       	subi	r24, 0xFF	; 255
     cd6:	81 32       	cpi	r24, 0x21	; 33
     cd8:	18 f4       	brcc	.+6      	; 0xce0 <log_add_record+0x36>
     cda:	80 93 8f 02 	sts	0x028F, r24	; 0x80028f <last_transaction_written>
     cde:	02 c0       	rjmp	.+4      	; 0xce4 <log_add_record+0x3a>
     ce0:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <last_transaction_written>
     ce4:	87 e0       	ldi	r24, 0x07	; 7
     ce6:	8c 9f       	mul	r24, r28
     ce8:	80 01       	movw	r16, r0
     cea:	8d 9f       	mul	r24, r29
     cec:	10 0d       	add	r17, r0
     cee:	11 24       	eor	r1, r1
     cf0:	0f 56       	subi	r16, 0x6F	; 111
     cf2:	1d 4f       	sbci	r17, 0xFD	; 253
     cf4:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <last_transaction_written>
     cf8:	f8 01       	movw	r30, r16
     cfa:	80 83       	st	Z, r24
     cfc:	0e 94 22 07 	call	0xe44	; 0xe44 <rtc_get_date>
     d00:	f8 01       	movw	r30, r16
     d02:	61 83       	std	Z+1, r22	; 0x01
     d04:	72 83       	std	Z+2, r23	; 0x02
     d06:	83 83       	std	Z+3, r24	; 0x03
     d08:	94 83       	std	Z+4, r25	; 0x04
     d0a:	e5 82       	std	Z+5, r14	; 0x05
     d0c:	c0 93 90 02 	sts	0x0290, r28	; 0x800290 <last_written>
     d10:	67 e0       	ldi	r22, 0x07	; 7
     d12:	70 e0       	ldi	r23, 0x00	; 0
     d14:	c8 01       	movw	r24, r16
     d16:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <update_checksum>
     d1a:	cf 5f       	subi	r28, 0xFF	; 255
     d1c:	dc 4f       	sbci	r29, 0xFC	; 252
     d1e:	81 e0       	ldi	r24, 0x01	; 1
     d20:	88 83       	st	Y, r24
     d22:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <last_written>
     d26:	90 91 8e 02 	lds	r25, 0x028E	; 0x80028e <tail>
     d2a:	89 13       	cpse	r24, r25
     d2c:	08 c0       	rjmp	.+16     	; 0xd3e <log_add_record+0x94>
     d2e:	ff 20       	and	r15, r15
     d30:	31 f0       	breq	.+12     	; 0xd3e <log_add_record+0x94>
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	01 96       	adiw	r24, 0x01	; 1
     d36:	8f 70       	andi	r24, 0x0F	; 15
     d38:	99 27       	eor	r25, r25
     d3a:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <tail>
     d3e:	df 91       	pop	r29
     d40:	cf 91       	pop	r28
     d42:	1f 91       	pop	r17
     d44:	0f 91       	pop	r16
     d46:	ff 90       	pop	r15
     d48:	ef 90       	pop	r14
     d4a:	08 95       	ret

00000d4c <log_clear>:
     d4c:	e1 e9       	ldi	r30, 0x91	; 145
     d4e:	f2 e0       	ldi	r31, 0x02	; 2
     d50:	a1 e0       	ldi	r26, 0x01	; 1
     d52:	b3 e0       	ldi	r27, 0x03	; 3
     d54:	8f ef       	ldi	r24, 0xFF	; 255
     d56:	4f ef       	ldi	r20, 0xFF	; 255
     d58:	5f ef       	ldi	r21, 0xFF	; 255
     d5a:	ba 01       	movw	r22, r20
     d5c:	91 e0       	ldi	r25, 0x01	; 1
     d5e:	80 83       	st	Z, r24
     d60:	85 83       	std	Z+5, r24	; 0x05
     d62:	41 83       	std	Z+1, r20	; 0x01
     d64:	52 83       	std	Z+2, r21	; 0x02
     d66:	63 83       	std	Z+3, r22	; 0x03
     d68:	74 83       	std	Z+4, r23	; 0x04
     d6a:	9d 93       	st	X+, r25
     d6c:	37 96       	adiw	r30, 0x07	; 7
     d6e:	23 e0       	ldi	r18, 0x03	; 3
     d70:	e1 30       	cpi	r30, 0x01	; 1
     d72:	f2 07       	cpc	r31, r18
     d74:	a1 f7       	brne	.-24     	; 0xd5e <log_clear+0x12>
     d76:	8f e0       	ldi	r24, 0x0F	; 15
     d78:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <last_written>
     d7c:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <tail>
     d80:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <last_transaction_written>
     d84:	08 95       	ret

00000d86 <log_get_num_entries>:
     d86:	0f 93       	push	r16
     d88:	1f 93       	push	r17
     d8a:	cf 93       	push	r28
     d8c:	df 93       	push	r29
     d8e:	00 91 8e 02 	lds	r16, 0x028E	; 0x80028e <tail>
     d92:	c0 2f       	mov	r28, r16
     d94:	10 e0       	ldi	r17, 0x00	; 0
     d96:	d0 e0       	ldi	r29, 0x00	; 0
     d98:	ce 01       	movw	r24, r28
     d9a:	0e 94 34 05 	call	0xa68	; 0xa68 <log_is_data_valid>
     d9e:	89 2b       	or	r24, r25
     da0:	29 f0       	breq	.+10     	; 0xdac <log_get_num_entries+0x26>
     da2:	21 96       	adiw	r28, 0x01	; 1
     da4:	cf 70       	andi	r28, 0x0F	; 15
     da6:	1f 5f       	subi	r17, 0xFF	; 255
     da8:	0c 13       	cpse	r16, r28
     daa:	f5 cf       	rjmp	.-22     	; 0xd96 <log_get_num_entries+0x10>
     dac:	81 2f       	mov	r24, r17
     dae:	df 91       	pop	r29
     db0:	cf 91       	pop	r28
     db2:	1f 91       	pop	r17
     db4:	0f 91       	pop	r16
     db6:	08 95       	ret

00000db8 <log_get_record>:
     db8:	af 92       	push	r10
     dba:	bf 92       	push	r11
     dbc:	cf 92       	push	r12
     dbe:	df 92       	push	r13
     dc0:	ef 92       	push	r14
     dc2:	ff 92       	push	r15
     dc4:	0f 93       	push	r16
     dc6:	1f 93       	push	r17
     dc8:	cf 93       	push	r28
     dca:	df 93       	push	r29
     dcc:	6b 01       	movw	r12, r22
     dce:	7c 01       	movw	r14, r24
     dd0:	8a 01       	movw	r16, r20
     dd2:	59 01       	movw	r10, r18
     dd4:	0e 94 c3 06 	call	0xd86	; 0xd86 <log_get_num_entries>
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	a0 e0       	ldi	r26, 0x00	; 0
     ddc:	b0 e0       	ldi	r27, 0x00	; 0
     dde:	c8 16       	cp	r12, r24
     de0:	d9 06       	cpc	r13, r25
     de2:	ea 06       	cpc	r14, r26
     de4:	fb 06       	cpc	r15, r27
     de6:	f8 f4       	brcc	.+62     	; 0xe26 <log_get_record+0x6e>
     de8:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <tail>
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	c8 0e       	add	r12, r24
     df0:	d9 1e       	adc	r13, r25
     df2:	8f e0       	ldi	r24, 0x0F	; 15
     df4:	c8 22       	and	r12, r24
     df6:	dd 24       	eor	r13, r13
     df8:	87 e0       	ldi	r24, 0x07	; 7
     dfa:	8c 9d       	mul	r24, r12
     dfc:	f0 01       	movw	r30, r0
     dfe:	8d 9d       	mul	r24, r13
     e00:	f0 0d       	add	r31, r0
     e02:	11 24       	eor	r1, r1
     e04:	ef 56       	subi	r30, 0x6F	; 111
     e06:	fd 4f       	sbci	r31, 0xFD	; 253
     e08:	81 81       	ldd	r24, Z+1	; 0x01
     e0a:	92 81       	ldd	r25, Z+2	; 0x02
     e0c:	a3 81       	ldd	r26, Z+3	; 0x03
     e0e:	b4 81       	ldd	r27, Z+4	; 0x04
     e10:	e8 01       	movw	r28, r16
     e12:	88 83       	st	Y, r24
     e14:	99 83       	std	Y+1, r25	; 0x01
     e16:	aa 83       	std	Y+2, r26	; 0x02
     e18:	bb 83       	std	Y+3, r27	; 0x03
     e1a:	85 81       	ldd	r24, Z+5	; 0x05
     e1c:	f5 01       	movw	r30, r10
     e1e:	80 83       	st	Z, r24
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	02 c0       	rjmp	.+4      	; 0xe2a <log_get_record+0x72>
     e26:	80 e0       	ldi	r24, 0x00	; 0
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	df 91       	pop	r29
     e2c:	cf 91       	pop	r28
     e2e:	1f 91       	pop	r17
     e30:	0f 91       	pop	r16
     e32:	ff 90       	pop	r15
     e34:	ef 90       	pop	r14
     e36:	df 90       	pop	r13
     e38:	cf 90       	pop	r12
     e3a:	bf 90       	pop	r11
     e3c:	af 90       	pop	r10
     e3e:	08 95       	ret

00000e40 <rtc_init>:
     e40:	0c 94 a4 0a 	jmp	0x1548	; 0x1548 <timer1_init>

00000e44 <rtc_get_date>:
     e44:	0f 93       	push	r16
     e46:	1f 93       	push	r17
     e48:	0e 94 b3 0a 	call	0x1566	; 0x1566 <timer1_get>
     e4c:	00 91 35 03 	lds	r16, 0x0335	; 0x800335 <rtc_base>
     e50:	10 91 36 03 	lds	r17, 0x0336	; 0x800336 <rtc_base+0x1>
     e54:	20 91 37 03 	lds	r18, 0x0337	; 0x800337 <rtc_base+0x2>
     e58:	30 91 38 03 	lds	r19, 0x0338	; 0x800338 <rtc_base+0x3>
     e5c:	60 0f       	add	r22, r16
     e5e:	71 1f       	adc	r23, r17
     e60:	82 1f       	adc	r24, r18
     e62:	93 1f       	adc	r25, r19
     e64:	1f 91       	pop	r17
     e66:	0f 91       	pop	r16
     e68:	08 95       	ret

00000e6a <is_leapyear>:
     e6a:	9c 01       	movw	r18, r24
     e6c:	60 e9       	ldi	r22, 0x90	; 144
     e6e:	71 e0       	ldi	r23, 0x01	; 1
     e70:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <__udivmodhi4>
     e74:	89 2b       	or	r24, r25
     e76:	79 f0       	breq	.+30     	; 0xe96 <is_leapyear+0x2c>
     e78:	c9 01       	movw	r24, r18
     e7a:	83 70       	andi	r24, 0x03	; 3
     e7c:	99 27       	eor	r25, r25
     e7e:	89 2b       	or	r24, r25
     e80:	61 f4       	brne	.+24     	; 0xe9a <is_leapyear+0x30>
     e82:	c9 01       	movw	r24, r18
     e84:	64 e6       	ldi	r22, 0x64	; 100
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <__udivmodhi4>
     e8c:	9c 01       	movw	r18, r24
     e8e:	81 e0       	ldi	r24, 0x01	; 1
     e90:	23 2b       	or	r18, r19
     e92:	21 f4       	brne	.+8      	; 0xe9c <is_leapyear+0x32>
     e94:	02 c0       	rjmp	.+4      	; 0xe9a <is_leapyear+0x30>
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	08 95       	ret
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	08 95       	ret

00000e9e <rtc_set_by_datestr>:
     e9e:	2f 92       	push	r2
     ea0:	3f 92       	push	r3
     ea2:	4f 92       	push	r4
     ea4:	5f 92       	push	r5
     ea6:	6f 92       	push	r6
     ea8:	7f 92       	push	r7
     eaa:	8f 92       	push	r8
     eac:	9f 92       	push	r9
     eae:	af 92       	push	r10
     eb0:	bf 92       	push	r11
     eb2:	cf 92       	push	r12
     eb4:	df 92       	push	r13
     eb6:	ef 92       	push	r14
     eb8:	ff 92       	push	r15
     eba:	0f 93       	push	r16
     ebc:	1f 93       	push	r17
     ebe:	cf 93       	push	r28
     ec0:	df 93       	push	r29
     ec2:	cd b7       	in	r28, 0x3d	; 61
     ec4:	de b7       	in	r29, 0x3e	; 62
     ec6:	67 97       	sbiw	r28, 0x17	; 23
     ec8:	0f b6       	in	r0, 0x3f	; 63
     eca:	f8 94       	cli
     ecc:	de bf       	out	0x3e, r29	; 62
     ece:	0f be       	out	0x3f, r0	; 63
     ed0:	cd bf       	out	0x3d, r28	; 61
     ed2:	2c e0       	ldi	r18, 0x0C	; 12
     ed4:	e4 e6       	ldi	r30, 0x64	; 100
     ed6:	f1 e0       	ldi	r31, 0x01	; 1
     ed8:	ae 01       	movw	r20, r28
     eda:	4f 5f       	subi	r20, 0xFF	; 255
     edc:	5f 4f       	sbci	r21, 0xFF	; 255
     ede:	1a 01       	movw	r2, r20
     ee0:	da 01       	movw	r26, r20
     ee2:	01 90       	ld	r0, Z+
     ee4:	0d 92       	st	X+, r0
     ee6:	2a 95       	dec	r18
     ee8:	e1 f7       	brne	.-8      	; 0xee2 <rtc_set_by_datestr+0x44>
     eea:	dc 01       	movw	r26, r24
     eec:	2c 91       	ld	r18, X
     eee:	22 0f       	add	r18, r18
     ef0:	20 56       	subi	r18, 0x60	; 96
     ef2:	32 2f       	mov	r19, r18
     ef4:	33 0f       	add	r19, r19
     ef6:	33 0f       	add	r19, r19
     ef8:	23 0f       	add	r18, r19
     efa:	11 96       	adiw	r26, 0x01	; 1
     efc:	3c 91       	ld	r19, X
     efe:	11 97       	sbiw	r26, 0x01	; 1
     f00:	31 53       	subi	r19, 0x31	; 49
     f02:	23 0f       	add	r18, r19
     f04:	2d 87       	std	Y+13, r18	; 0x0d
     f06:	13 96       	adiw	r26, 0x03	; 3
     f08:	2c 91       	ld	r18, X
     f0a:	13 97       	sbiw	r26, 0x03	; 3
     f0c:	02 2e       	mov	r0, r18
     f0e:	00 0c       	add	r0, r0
     f10:	33 0b       	sbc	r19, r19
     f12:	20 53       	subi	r18, 0x30	; 48
     f14:	31 09       	sbc	r19, r1
     f16:	6a e0       	ldi	r22, 0x0A	; 10
     f18:	62 9f       	mul	r22, r18
     f1a:	a0 01       	movw	r20, r0
     f1c:	63 9f       	mul	r22, r19
     f1e:	50 0d       	add	r21, r0
     f20:	11 24       	eor	r1, r1
     f22:	14 96       	adiw	r26, 0x04	; 4
     f24:	cc 90       	ld	r12, X
     f26:	0c 2c       	mov	r0, r12
     f28:	00 0c       	add	r0, r0
     f2a:	dd 08       	sbc	r13, r13
     f2c:	b0 e3       	ldi	r27, 0x30	; 48
     f2e:	cb 1a       	sub	r12, r27
     f30:	d1 08       	sbc	r13, r1
     f32:	c4 0e       	add	r12, r20
     f34:	d5 1e       	adc	r13, r21
     f36:	86 01       	movw	r16, r12
     f38:	01 50       	subi	r16, 0x01	; 1
     f3a:	11 09       	sbc	r17, r1
     f3c:	fc 01       	movw	r30, r24
     f3e:	26 81       	ldd	r18, Z+6	; 0x06
     f40:	02 2e       	mov	r0, r18
     f42:	00 0c       	add	r0, r0
     f44:	33 0b       	sbc	r19, r19
     f46:	20 53       	subi	r18, 0x30	; 48
     f48:	31 09       	sbc	r19, r1
     f4a:	e8 ee       	ldi	r30, 0xE8	; 232
     f4c:	f3 e0       	ldi	r31, 0x03	; 3
     f4e:	2e 9f       	mul	r18, r30
     f50:	a0 01       	movw	r20, r0
     f52:	2f 9f       	mul	r18, r31
     f54:	50 0d       	add	r21, r0
     f56:	3e 9f       	mul	r19, r30
     f58:	50 0d       	add	r21, r0
     f5a:	11 24       	eor	r1, r1
     f5c:	dc 01       	movw	r26, r24
     f5e:	17 96       	adiw	r26, 0x07	; 7
     f60:	2c 91       	ld	r18, X
     f62:	17 97       	sbiw	r26, 0x07	; 7
     f64:	02 2e       	mov	r0, r18
     f66:	00 0c       	add	r0, r0
     f68:	33 0b       	sbc	r19, r19
     f6a:	20 53       	subi	r18, 0x30	; 48
     f6c:	31 09       	sbc	r19, r1
     f6e:	74 e6       	ldi	r23, 0x64	; 100
     f70:	72 9f       	mul	r23, r18
     f72:	70 01       	movw	r14, r0
     f74:	73 9f       	mul	r23, r19
     f76:	f0 0c       	add	r15, r0
     f78:	11 24       	eor	r1, r1
     f7a:	e4 0e       	add	r14, r20
     f7c:	f5 1e       	adc	r15, r21
     f7e:	18 96       	adiw	r26, 0x08	; 8
     f80:	4c 91       	ld	r20, X
     f82:	18 97       	sbiw	r26, 0x08	; 8
     f84:	04 2e       	mov	r0, r20
     f86:	00 0c       	add	r0, r0
     f88:	55 0b       	sbc	r21, r21
     f8a:	40 53       	subi	r20, 0x30	; 48
     f8c:	51 09       	sbc	r21, r1
     f8e:	64 9f       	mul	r22, r20
     f90:	90 01       	movw	r18, r0
     f92:	65 9f       	mul	r22, r21
     f94:	30 0d       	add	r19, r0
     f96:	11 24       	eor	r1, r1
     f98:	e2 0e       	add	r14, r18
     f9a:	f3 1e       	adc	r15, r19
     f9c:	19 96       	adiw	r26, 0x09	; 9
     f9e:	2c 91       	ld	r18, X
     fa0:	19 97       	sbiw	r26, 0x09	; 9
     fa2:	f7 01       	movw	r30, r14
     fa4:	e2 0f       	add	r30, r18
     fa6:	f1 1d       	adc	r31, r1
     fa8:	27 fd       	sbrc	r18, 7
     faa:	fa 95       	dec	r31
     fac:	af 01       	movw	r20, r30
     fae:	58 50       	subi	r21, 0x08	; 8
     fb0:	7a 01       	movw	r14, r20
     fb2:	1b 96       	adiw	r26, 0x0b	; 11
     fb4:	2c 91       	ld	r18, X
     fb6:	1b 97       	sbiw	r26, 0x0b	; 11
     fb8:	22 0f       	add	r18, r18
     fba:	20 56       	subi	r18, 0x60	; 96
     fbc:	32 2f       	mov	r19, r18
     fbe:	33 0f       	add	r19, r19
     fc0:	33 0f       	add	r19, r19
     fc2:	23 0f       	add	r18, r19
     fc4:	1c 96       	adiw	r26, 0x0c	; 12
     fc6:	3c 91       	ld	r19, X
     fc8:	1c 97       	sbiw	r26, 0x0c	; 12
     fca:	30 53       	subi	r19, 0x30	; 48
     fcc:	23 0f       	add	r18, r19
     fce:	29 8b       	std	Y+17, r18	; 0x11
     fd0:	1e 96       	adiw	r26, 0x0e	; 14
     fd2:	2c 91       	ld	r18, X
     fd4:	1e 97       	sbiw	r26, 0x0e	; 14
     fd6:	22 0f       	add	r18, r18
     fd8:	20 56       	subi	r18, 0x60	; 96
     fda:	32 2f       	mov	r19, r18
     fdc:	33 0f       	add	r19, r19
     fde:	33 0f       	add	r19, r19
     fe0:	23 0f       	add	r18, r19
     fe2:	1f 96       	adiw	r26, 0x0f	; 15
     fe4:	3c 91       	ld	r19, X
     fe6:	1f 97       	sbiw	r26, 0x0f	; 15
     fe8:	30 53       	subi	r19, 0x30	; 48
     fea:	23 0f       	add	r18, r19
     fec:	2a 8b       	std	Y+18, r18	; 0x12
     fee:	51 96       	adiw	r26, 0x11	; 17
     ff0:	2c 91       	ld	r18, X
     ff2:	51 97       	sbiw	r26, 0x11	; 17
     ff4:	22 0f       	add	r18, r18
     ff6:	20 56       	subi	r18, 0x60	; 96
     ff8:	32 2f       	mov	r19, r18
     ffa:	33 0f       	add	r19, r19
     ffc:	33 0f       	add	r19, r19
     ffe:	23 0f       	add	r18, r19
    1000:	52 96       	adiw	r26, 0x12	; 18
    1002:	8c 91       	ld	r24, X
    1004:	80 53       	subi	r24, 0x30	; 48
    1006:	28 0f       	add	r18, r24
    1008:	2b 8b       	std	Y+19, r18	; 0x13
    100a:	ca 01       	movw	r24, r20
    100c:	0e 94 35 07 	call	0xe6a	; 0xe6a <is_leapyear>
    1010:	88 23       	and	r24, r24
    1012:	21 f0       	breq	.+8      	; 0x101c <rtc_set_by_datestr+0x17e>
    1014:	5d 85       	ldd	r21, Y+13	; 0x0d
    1016:	52 30       	cpi	r21, 0x02	; 2
    1018:	08 f0       	brcs	.+2      	; 0x101c <rtc_set_by_datestr+0x17e>
    101a:	86 01       	movw	r16, r12
    101c:	c7 01       	movw	r24, r14
    101e:	60 e9       	ldi	r22, 0x90	; 144
    1020:	71 e0       	ldi	r23, 0x01	; 1
    1022:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <__udivmodhi4>
    1026:	fc 01       	movw	r30, r24
    1028:	db 01       	movw	r26, r22
    102a:	20 e8       	ldi	r18, 0x80	; 128
    102c:	39 e5       	ldi	r19, 0x59	; 89
    102e:	40 e6       	ldi	r20, 0x60	; 96
    1030:	50 ef       	ldi	r21, 0xF0	; 240
    1032:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <__muluhisi3>
    1036:	2b 01       	movw	r4, r22
    1038:	3c 01       	movw	r6, r24
    103a:	cf 01       	movw	r24, r30
    103c:	64 e6       	ldi	r22, 0x64	; 100
    103e:	70 e0       	ldi	r23, 0x00	; 0
    1040:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <__udivmodhi4>
    1044:	fc 01       	movw	r30, r24
    1046:	db 01       	movw	r26, r22
    1048:	20 e0       	ldi	r18, 0x00	; 0
    104a:	32 ec       	ldi	r19, 0xC2	; 194
    104c:	47 e1       	ldi	r20, 0x17	; 23
    104e:	5c eb       	ldi	r21, 0xBC	; 188
    1050:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <__muluhisi3>
    1054:	4b 01       	movw	r8, r22
    1056:	5c 01       	movw	r10, r24
    1058:	df 01       	movw	r26, r30
    105a:	b6 95       	lsr	r27
    105c:	a7 95       	ror	r26
    105e:	b6 95       	lsr	r27
    1060:	a7 95       	ror	r26
    1062:	20 e8       	ldi	r18, 0x80	; 128
    1064:	3f e1       	ldi	r19, 0x1F	; 31
    1066:	46 e8       	ldi	r20, 0x86	; 134
    1068:	57 e0       	ldi	r21, 0x07	; 7
    106a:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <__muluhisi3>
    106e:	6b 01       	movw	r12, r22
    1070:	7c 01       	movw	r14, r24
    1072:	df 01       	movw	r26, r30
    1074:	a3 70       	andi	r26, 0x03	; 3
    1076:	bb 27       	eor	r27, r27
    1078:	20 e8       	ldi	r18, 0x80	; 128
    107a:	33 e3       	ldi	r19, 0x33	; 51
    107c:	41 ee       	ldi	r20, 0xE1	; 225
    107e:	51 e0       	ldi	r21, 0x01	; 1
    1080:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <__muluhisi3>
    1084:	6c 8b       	std	Y+20, r22	; 0x14
    1086:	7d 8b       	std	Y+21, r23	; 0x15
    1088:	8e 8b       	std	Y+22, r24	; 0x16
    108a:	9f 8b       	std	Y+23, r25	; 0x17
    108c:	f1 01       	movw	r30, r2
    108e:	8e 2f       	mov	r24, r30
    1090:	82 19       	sub	r24, r2
    1092:	9d 85       	ldd	r25, Y+13	; 0x0d
    1094:	89 17       	cp	r24, r25
    1096:	20 f4       	brcc	.+8      	; 0x10a0 <rtc_set_by_datestr+0x202>
    1098:	81 91       	ld	r24, Z+
    109a:	08 0f       	add	r16, r24
    109c:	11 1d       	adc	r17, r1
    109e:	f7 cf       	rjmp	.-18     	; 0x108e <rtc_set_by_datestr+0x1f0>
    10a0:	a9 89       	ldd	r26, Y+17	; 0x11
    10a2:	2a 2f       	mov	r18, r26
    10a4:	30 e0       	ldi	r19, 0x00	; 0
    10a6:	a0 e1       	ldi	r26, 0x10	; 16
    10a8:	be e0       	ldi	r27, 0x0E	; 14
    10aa:	0e 94 60 0e 	call	0x1cc0	; 0x1cc0 <__umulhisi3>
    10ae:	6d 87       	std	Y+13, r22	; 0x0d
    10b0:	7e 87       	std	Y+14, r23	; 0x0e
    10b2:	8f 87       	std	Y+15, r24	; 0x0f
    10b4:	98 8b       	std	Y+16, r25	; 0x10
    10b6:	ba 89       	ldd	r27, Y+18	; 0x12
    10b8:	2b 2f       	mov	r18, r27
    10ba:	30 e0       	ldi	r19, 0x00	; 0
    10bc:	ac e3       	ldi	r26, 0x3C	; 60
    10be:	b0 e0       	ldi	r27, 0x00	; 0
    10c0:	0e 94 60 0e 	call	0x1cc0	; 0x1cc0 <__umulhisi3>
    10c4:	2d 85       	ldd	r18, Y+13	; 0x0d
    10c6:	3e 85       	ldd	r19, Y+14	; 0x0e
    10c8:	4f 85       	ldd	r20, Y+15	; 0x0f
    10ca:	58 89       	ldd	r21, Y+16	; 0x10
    10cc:	26 0f       	add	r18, r22
    10ce:	37 1f       	adc	r19, r23
    10d0:	48 1f       	adc	r20, r24
    10d2:	59 1f       	adc	r21, r25
    10d4:	da 01       	movw	r26, r20
    10d6:	c9 01       	movw	r24, r18
    10d8:	3b 89       	ldd	r19, Y+19	; 0x13
    10da:	83 0f       	add	r24, r19
    10dc:	91 1d       	adc	r25, r1
    10de:	a1 1d       	adc	r26, r1
    10e0:	b1 1d       	adc	r27, r1
    10e2:	48 0e       	add	r4, r24
    10e4:	59 1e       	adc	r5, r25
    10e6:	6a 1e       	adc	r6, r26
    10e8:	7b 1e       	adc	r7, r27
    10ea:	84 0c       	add	r8, r4
    10ec:	95 1c       	adc	r9, r5
    10ee:	a6 1c       	adc	r10, r6
    10f0:	b7 1c       	adc	r11, r7
    10f2:	c8 0c       	add	r12, r8
    10f4:	d9 1c       	adc	r13, r9
    10f6:	ea 1c       	adc	r14, r10
    10f8:	fb 1c       	adc	r15, r11
    10fa:	8c 89       	ldd	r24, Y+20	; 0x14
    10fc:	9d 89       	ldd	r25, Y+21	; 0x15
    10fe:	ae 89       	ldd	r26, Y+22	; 0x16
    1100:	bf 89       	ldd	r27, Y+23	; 0x17
    1102:	c8 0e       	add	r12, r24
    1104:	d9 1e       	adc	r13, r25
    1106:	ea 1e       	adc	r14, r26
    1108:	fb 1e       	adc	r15, r27
    110a:	d8 01       	movw	r26, r16
    110c:	20 e8       	ldi	r18, 0x80	; 128
    110e:	31 e5       	ldi	r19, 0x51	; 81
    1110:	41 e0       	ldi	r20, 0x01	; 1
    1112:	50 e0       	ldi	r21, 0x00	; 0
    1114:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <__muluhisi3>
    1118:	dc 01       	movw	r26, r24
    111a:	cb 01       	movw	r24, r22
    111c:	8c 0d       	add	r24, r12
    111e:	9d 1d       	adc	r25, r13
    1120:	ae 1d       	adc	r26, r14
    1122:	bf 1d       	adc	r27, r15
    1124:	80 93 35 03 	sts	0x0335, r24	; 0x800335 <rtc_base>
    1128:	90 93 36 03 	sts	0x0336, r25	; 0x800336 <rtc_base+0x1>
    112c:	a0 93 37 03 	sts	0x0337, r26	; 0x800337 <rtc_base+0x2>
    1130:	b0 93 38 03 	sts	0x0338, r27	; 0x800338 <rtc_base+0x3>
    1134:	67 96       	adiw	r28, 0x17	; 23
    1136:	0f b6       	in	r0, 0x3f	; 63
    1138:	f8 94       	cli
    113a:	de bf       	out	0x3e, r29	; 62
    113c:	0f be       	out	0x3f, r0	; 63
    113e:	cd bf       	out	0x3d, r28	; 61
    1140:	df 91       	pop	r29
    1142:	cf 91       	pop	r28
    1144:	1f 91       	pop	r17
    1146:	0f 91       	pop	r16
    1148:	ff 90       	pop	r15
    114a:	ef 90       	pop	r14
    114c:	df 90       	pop	r13
    114e:	cf 90       	pop	r12
    1150:	bf 90       	pop	r11
    1152:	af 90       	pop	r10
    1154:	9f 90       	pop	r9
    1156:	8f 90       	pop	r8
    1158:	7f 90       	pop	r7
    115a:	6f 90       	pop	r6
    115c:	5f 90       	pop	r5
    115e:	4f 90       	pop	r4
    1160:	3f 90       	pop	r3
    1162:	2f 90       	pop	r2
    1164:	0c 94 bf 0a 	jmp	0x157e	; 0x157e <timer1_clear>

00001168 <get_month>:
    1168:	ef 92       	push	r14
    116a:	ff 92       	push	r15
    116c:	0f 93       	push	r16
    116e:	1f 93       	push	r17
    1170:	cf 93       	push	r28
    1172:	df 93       	push	r29
    1174:	cd b7       	in	r28, 0x3d	; 61
    1176:	de b7       	in	r29, 0x3e	; 62
    1178:	68 97       	sbiw	r28, 0x18	; 24
    117a:	0f b6       	in	r0, 0x3f	; 63
    117c:	f8 94       	cli
    117e:	de bf       	out	0x3e, r29	; 62
    1180:	0f be       	out	0x3f, r0	; 63
    1182:	cd bf       	out	0x3d, r28	; 61
    1184:	7b 01       	movw	r14, r22
    1186:	2c e0       	ldi	r18, 0x0C	; 12
    1188:	e4 e6       	ldi	r30, 0x64	; 100
    118a:	f1 e0       	ldi	r31, 0x01	; 1
    118c:	de 01       	movw	r26, r28
    118e:	1d 96       	adiw	r26, 0x0d	; 13
    1190:	01 90       	ld	r0, Z+
    1192:	0d 92       	st	X+, r0
    1194:	2a 95       	dec	r18
    1196:	e1 f7       	brne	.-8      	; 0x1190 <get_month+0x28>
    1198:	8e 01       	movw	r16, r28
    119a:	0f 5f       	subi	r16, 0xFF	; 255
    119c:	1f 4f       	sbci	r17, 0xFF	; 255
    119e:	2c e0       	ldi	r18, 0x0C	; 12
    11a0:	f8 01       	movw	r30, r16
    11a2:	11 92       	st	Z+, r1
    11a4:	2a 95       	dec	r18
    11a6:	e9 f7       	brne	.-6      	; 0x11a2 <get_month+0x3a>
    11a8:	0e 94 35 07 	call	0xe6a	; 0xe6a <is_leapyear>
    11ac:	8a 83       	std	Y+2, r24	; 0x02
    11ae:	de 01       	movw	r26, r28
    11b0:	1d 96       	adiw	r26, 0x0d	; 13
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	f7 01       	movw	r30, r14
    11b6:	40 81       	ld	r20, Z
    11b8:	51 81       	ldd	r21, Z+1	; 0x01
    11ba:	9d 91       	ld	r25, X+
    11bc:	f8 01       	movw	r30, r16
    11be:	21 91       	ld	r18, Z+
    11c0:	8f 01       	movw	r16, r30
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	29 0f       	add	r18, r25
    11c6:	31 1d       	adc	r19, r1
    11c8:	42 17       	cp	r20, r18
    11ca:	53 07       	cpc	r21, r19
    11cc:	40 f0       	brcs	.+16     	; 0x11de <get_month+0x76>
    11ce:	42 1b       	sub	r20, r18
    11d0:	53 0b       	sbc	r21, r19
    11d2:	f7 01       	movw	r30, r14
    11d4:	51 83       	std	Z+1, r21	; 0x01
    11d6:	40 83       	st	Z, r20
    11d8:	8f 5f       	subi	r24, 0xFF	; 255
    11da:	8c 30       	cpi	r24, 0x0C	; 12
    11dc:	59 f7       	brne	.-42     	; 0x11b4 <get_month+0x4c>
    11de:	68 96       	adiw	r28, 0x18	; 24
    11e0:	0f b6       	in	r0, 0x3f	; 63
    11e2:	f8 94       	cli
    11e4:	de bf       	out	0x3e, r29	; 62
    11e6:	0f be       	out	0x3f, r0	; 63
    11e8:	cd bf       	out	0x3d, r28	; 61
    11ea:	df 91       	pop	r29
    11ec:	cf 91       	pop	r28
    11ee:	1f 91       	pop	r17
    11f0:	0f 91       	pop	r16
    11f2:	ff 90       	pop	r15
    11f4:	ef 90       	pop	r14
    11f6:	08 95       	ret

000011f8 <rtc_num2datestr>:
    11f8:	4f 92       	push	r4
    11fa:	5f 92       	push	r5
    11fc:	6f 92       	push	r6
    11fe:	7f 92       	push	r7
    1200:	8f 92       	push	r8
    1202:	9f 92       	push	r9
    1204:	af 92       	push	r10
    1206:	bf 92       	push	r11
    1208:	cf 92       	push	r12
    120a:	df 92       	push	r13
    120c:	ef 92       	push	r14
    120e:	ff 92       	push	r15
    1210:	cf 93       	push	r28
    1212:	df 93       	push	r29
    1214:	00 d0       	rcall	.+0      	; 0x1216 <rtc_num2datestr+0x1e>
    1216:	cd b7       	in	r28, 0x3d	; 61
    1218:	de b7       	in	r29, 0x3e	; 62
    121a:	2b 01       	movw	r4, r22
    121c:	3c 01       	movw	r6, r24
    121e:	81 e0       	ldi	r24, 0x01	; 1
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	a0 e0       	ldi	r26, 0x00	; 0
    1224:	b0 e0       	ldi	r27, 0x00	; 0
    1226:	20 e8       	ldi	r18, 0x80	; 128
    1228:	42 16       	cp	r4, r18
    122a:	29 e5       	ldi	r18, 0x59	; 89
    122c:	52 06       	cpc	r5, r18
    122e:	20 e6       	ldi	r18, 0x60	; 96
    1230:	62 06       	cpc	r6, r18
    1232:	20 ef       	ldi	r18, 0xF0	; 240
    1234:	72 06       	cpc	r7, r18
    1236:	18 f4       	brcc	.+6      	; 0x123e <rtc_num2datestr+0x46>
    1238:	80 e0       	ldi	r24, 0x00	; 0
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	dc 01       	movw	r26, r24
    123e:	20 e9       	ldi	r18, 0x90	; 144
    1240:	31 e0       	ldi	r19, 0x01	; 1
    1242:	82 9f       	mul	r24, r18
    1244:	50 01       	movw	r10, r0
    1246:	83 9f       	mul	r24, r19
    1248:	b0 0c       	add	r11, r0
    124a:	92 9f       	mul	r25, r18
    124c:	b0 0c       	add	r11, r0
    124e:	11 24       	eor	r1, r1
    1250:	80 e3       	ldi	r24, 0x30	; 48
    1252:	a8 1a       	sub	r10, r24
    1254:	88 ef       	ldi	r24, 0xF8	; 248
    1256:	b8 0a       	sbc	r11, r24
    1258:	c1 2c       	mov	r12, r1
    125a:	d1 2c       	mov	r13, r1
    125c:	76 01       	movw	r14, r12
    125e:	c3 94       	inc	r12
    1260:	20 e8       	ldi	r18, 0x80	; 128
    1262:	42 16       	cp	r4, r18
    1264:	29 e5       	ldi	r18, 0x59	; 89
    1266:	52 06       	cpc	r5, r18
    1268:	20 e6       	ldi	r18, 0x60	; 96
    126a:	62 06       	cpc	r6, r18
    126c:	20 ef       	ldi	r18, 0xF0	; 240
    126e:	72 06       	cpc	r7, r18
    1270:	18 f4       	brcc	.+6      	; 0x1278 <rtc_num2datestr+0x80>
    1272:	c1 2c       	mov	r12, r1
    1274:	d1 2c       	mov	r13, r1
    1276:	76 01       	movw	r14, r12
    1278:	a7 01       	movw	r20, r14
    127a:	96 01       	movw	r18, r12
    127c:	60 e8       	ldi	r22, 0x80	; 128
    127e:	79 e5       	ldi	r23, 0x59	; 89
    1280:	80 e6       	ldi	r24, 0x60	; 96
    1282:	90 ef       	ldi	r25, 0xF0	; 240
    1284:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__mulsi3>
    1288:	73 01       	movw	r14, r6
    128a:	62 01       	movw	r12, r4
    128c:	c6 1a       	sub	r12, r22
    128e:	d7 0a       	sbc	r13, r23
    1290:	e8 0a       	sbc	r14, r24
    1292:	f9 0a       	sbc	r15, r25
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	a0 e0       	ldi	r26, 0x00	; 0
    129a:	b0 e0       	ldi	r27, 0x00	; 0
    129c:	c1 14       	cp	r12, r1
    129e:	22 ec       	ldi	r18, 0xC2	; 194
    12a0:	d2 06       	cpc	r13, r18
    12a2:	27 e1       	ldi	r18, 0x17	; 23
    12a4:	e2 06       	cpc	r14, r18
    12a6:	2c eb       	ldi	r18, 0xBC	; 188
    12a8:	f2 06       	cpc	r15, r18
    12aa:	18 f4       	brcc	.+6      	; 0x12b2 <rtc_num2datestr+0xba>
    12ac:	80 e0       	ldi	r24, 0x00	; 0
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	dc 01       	movw	r26, r24
    12b2:	44 e6       	ldi	r20, 0x64	; 100
    12b4:	48 9f       	mul	r20, r24
    12b6:	90 01       	movw	r18, r0
    12b8:	49 9f       	mul	r20, r25
    12ba:	30 0d       	add	r19, r0
    12bc:	11 24       	eor	r1, r1
    12be:	a2 0e       	add	r10, r18
    12c0:	b3 1e       	adc	r11, r19
    12c2:	21 e0       	ldi	r18, 0x01	; 1
    12c4:	30 e0       	ldi	r19, 0x00	; 0
    12c6:	40 e0       	ldi	r20, 0x00	; 0
    12c8:	50 e0       	ldi	r21, 0x00	; 0
    12ca:	c1 14       	cp	r12, r1
    12cc:	82 ec       	ldi	r24, 0xC2	; 194
    12ce:	d8 06       	cpc	r13, r24
    12d0:	87 e1       	ldi	r24, 0x17	; 23
    12d2:	e8 06       	cpc	r14, r24
    12d4:	8c eb       	ldi	r24, 0xBC	; 188
    12d6:	f8 06       	cpc	r15, r24
    12d8:	18 f4       	brcc	.+6      	; 0x12e0 <rtc_num2datestr+0xe8>
    12da:	20 e0       	ldi	r18, 0x00	; 0
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	a9 01       	movw	r20, r18
    12e0:	60 e0       	ldi	r22, 0x00	; 0
    12e2:	72 ec       	ldi	r23, 0xC2	; 194
    12e4:	87 e1       	ldi	r24, 0x17	; 23
    12e6:	9c eb       	ldi	r25, 0xBC	; 188
    12e8:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__mulsi3>
    12ec:	a7 01       	movw	r20, r14
    12ee:	96 01       	movw	r18, r12
    12f0:	26 1b       	sub	r18, r22
    12f2:	37 0b       	sbc	r19, r23
    12f4:	48 0b       	sbc	r20, r24
    12f6:	59 0b       	sbc	r21, r25
    12f8:	ca 01       	movw	r24, r20
    12fa:	b9 01       	movw	r22, r18
    12fc:	20 e8       	ldi	r18, 0x80	; 128
    12fe:	3f e1       	ldi	r19, 0x1F	; 31
    1300:	46 e8       	ldi	r20, 0x86	; 134
    1302:	57 e0       	ldi	r21, 0x07	; 7
    1304:	0e 94 1f 0e 	call	0x1c3e	; 0x1c3e <__udivmodsi4>
    1308:	22 0f       	add	r18, r18
    130a:	33 1f       	adc	r19, r19
    130c:	22 0f       	add	r18, r18
    130e:	33 1f       	adc	r19, r19
    1310:	a2 0e       	add	r10, r18
    1312:	b3 1e       	adc	r11, r19
    1314:	20 e8       	ldi	r18, 0x80	; 128
    1316:	33 e3       	ldi	r19, 0x33	; 51
    1318:	41 ee       	ldi	r20, 0xE1	; 225
    131a:	51 e0       	ldi	r21, 0x01	; 1
    131c:	0e 94 1f 0e 	call	0x1c3e	; 0x1c3e <__udivmodsi4>
    1320:	75 01       	movw	r14, r10
    1322:	e2 0e       	add	r14, r18
    1324:	f3 1e       	adc	r15, r19
    1326:	20 e8       	ldi	r18, 0x80	; 128
    1328:	31 e5       	ldi	r19, 0x51	; 81
    132a:	41 e0       	ldi	r20, 0x01	; 1
    132c:	50 e0       	ldi	r21, 0x00	; 0
    132e:	0e 94 1f 0e 	call	0x1c3e	; 0x1c3e <__udivmodsi4>
    1332:	4b 01       	movw	r8, r22
    1334:	5c 01       	movw	r10, r24
    1336:	3a 83       	std	Y+2, r19	; 0x02
    1338:	29 83       	std	Y+1, r18	; 0x01
    133a:	be 01       	movw	r22, r28
    133c:	6f 5f       	subi	r22, 0xFF	; 255
    133e:	7f 4f       	sbci	r23, 0xFF	; 255
    1340:	c7 01       	movw	r24, r14
    1342:	0e 94 b4 08 	call	0x1168	; 0x1168 <get_month>
    1346:	d8 2e       	mov	r13, r24
    1348:	c5 01       	movw	r24, r10
    134a:	b4 01       	movw	r22, r8
    134c:	20 e1       	ldi	r18, 0x10	; 16
    134e:	3e e0       	ldi	r19, 0x0E	; 14
    1350:	40 e0       	ldi	r20, 0x00	; 0
    1352:	50 e0       	ldi	r21, 0x00	; 0
    1354:	0e 94 1f 0e 	call	0x1c3e	; 0x1c3e <__udivmodsi4>
    1358:	29 01       	movw	r4, r18
    135a:	3a 01       	movw	r6, r20
    135c:	4b 01       	movw	r8, r22
    135e:	5c 01       	movw	r10, r24
    1360:	60 e7       	ldi	r22, 0x70	; 112
    1362:	71 e0       	ldi	r23, 0x01	; 1
    1364:	8c e0       	ldi	r24, 0x0C	; 12
    1366:	91 e0       	ldi	r25, 0x01	; 1
    1368:	0e 94 13 0a 	call	0x1426	; 0x1426 <str_cpy>
    136c:	6d 2d       	mov	r22, r13
    136e:	70 e0       	ldi	r23, 0x00	; 0
    1370:	6f 5f       	subi	r22, 0xFF	; 255
    1372:	7f 4f       	sbci	r23, 0xFF	; 255
    1374:	42 e0       	ldi	r20, 0x02	; 2
    1376:	8c e0       	ldi	r24, 0x0C	; 12
    1378:	91 e0       	ldi	r25, 0x01	; 1
    137a:	0e 94 1d 0a 	call	0x143a	; 0x143a <str_writeudec16>
    137e:	69 81       	ldd	r22, Y+1	; 0x01
    1380:	7a 81       	ldd	r23, Y+2	; 0x02
    1382:	6f 5f       	subi	r22, 0xFF	; 255
    1384:	7f 4f       	sbci	r23, 0xFF	; 255
    1386:	42 e0       	ldi	r20, 0x02	; 2
    1388:	8f e0       	ldi	r24, 0x0F	; 15
    138a:	91 e0       	ldi	r25, 0x01	; 1
    138c:	0e 94 1d 0a 	call	0x143a	; 0x143a <str_writeudec16>
    1390:	44 e0       	ldi	r20, 0x04	; 4
    1392:	b7 01       	movw	r22, r14
    1394:	82 e1       	ldi	r24, 0x12	; 18
    1396:	91 e0       	ldi	r25, 0x01	; 1
    1398:	0e 94 1d 0a 	call	0x143a	; 0x143a <str_writeudec16>
    139c:	42 e0       	ldi	r20, 0x02	; 2
    139e:	b2 01       	movw	r22, r4
    13a0:	87 e1       	ldi	r24, 0x17	; 23
    13a2:	91 e0       	ldi	r25, 0x01	; 1
    13a4:	0e 94 1d 0a 	call	0x143a	; 0x143a <str_writeudec16>
    13a8:	c5 01       	movw	r24, r10
    13aa:	b4 01       	movw	r22, r8
    13ac:	2c e3       	ldi	r18, 0x3C	; 60
    13ae:	30 e0       	ldi	r19, 0x00	; 0
    13b0:	40 e0       	ldi	r20, 0x00	; 0
    13b2:	50 e0       	ldi	r21, 0x00	; 0
    13b4:	0e 94 1f 0e 	call	0x1c3e	; 0x1c3e <__udivmodsi4>
    13b8:	49 01       	movw	r8, r18
    13ba:	5a 01       	movw	r10, r20
    13bc:	6b 01       	movw	r12, r22
    13be:	7c 01       	movw	r14, r24
    13c0:	42 e0       	ldi	r20, 0x02	; 2
    13c2:	b4 01       	movw	r22, r8
    13c4:	8a e1       	ldi	r24, 0x1A	; 26
    13c6:	91 e0       	ldi	r25, 0x01	; 1
    13c8:	0e 94 1d 0a 	call	0x143a	; 0x143a <str_writeudec16>
    13cc:	42 e0       	ldi	r20, 0x02	; 2
    13ce:	b6 01       	movw	r22, r12
    13d0:	8d e1       	ldi	r24, 0x1D	; 29
    13d2:	91 e0       	ldi	r25, 0x01	; 1
    13d4:	0e 94 1d 0a 	call	0x143a	; 0x143a <str_writeudec16>
    13d8:	8c e0       	ldi	r24, 0x0C	; 12
    13da:	91 e0       	ldi	r25, 0x01	; 1
    13dc:	0f 90       	pop	r0
    13de:	0f 90       	pop	r0
    13e0:	df 91       	pop	r29
    13e2:	cf 91       	pop	r28
    13e4:	ff 90       	pop	r15
    13e6:	ef 90       	pop	r14
    13e8:	df 90       	pop	r13
    13ea:	cf 90       	pop	r12
    13ec:	bf 90       	pop	r11
    13ee:	af 90       	pop	r10
    13f0:	9f 90       	pop	r9
    13f2:	8f 90       	pop	r8
    13f4:	7f 90       	pop	r7
    13f6:	6f 90       	pop	r6
    13f8:	5f 90       	pop	r5
    13fa:	4f 90       	pop	r4
    13fc:	08 95       	ret

000013fe <rtc_get_date_string>:
    13fe:	0f 93       	push	r16
    1400:	1f 93       	push	r17
    1402:	0e 94 b3 0a 	call	0x1566	; 0x1566 <timer1_get>
    1406:	00 91 35 03 	lds	r16, 0x0335	; 0x800335 <rtc_base>
    140a:	10 91 36 03 	lds	r17, 0x0336	; 0x800336 <rtc_base+0x1>
    140e:	20 91 37 03 	lds	r18, 0x0337	; 0x800337 <rtc_base+0x2>
    1412:	30 91 38 03 	lds	r19, 0x0338	; 0x800338 <rtc_base+0x3>
    1416:	60 0f       	add	r22, r16
    1418:	71 1f       	adc	r23, r17
    141a:	82 1f       	adc	r24, r18
    141c:	93 1f       	adc	r25, r19
    141e:	1f 91       	pop	r17
    1420:	0f 91       	pop	r16
    1422:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <rtc_num2datestr>

00001426 <str_cpy>:
    1426:	fc 01       	movw	r30, r24
    1428:	db 01       	movw	r26, r22
    142a:	8d 91       	ld	r24, X+
    142c:	bd 01       	movw	r22, r26
    142e:	88 23       	and	r24, r24
    1430:	11 f0       	breq	.+4      	; 0x1436 <str_cpy+0x10>
    1432:	81 93       	st	Z+, r24
    1434:	f9 cf       	rjmp	.-14     	; 0x1428 <str_cpy+0x2>
    1436:	10 82       	st	Z, r1
    1438:	08 95       	ret

0000143a <str_writeudec16>:
    143a:	9f 92       	push	r9
    143c:	af 92       	push	r10
    143e:	bf 92       	push	r11
    1440:	cf 92       	push	r12
    1442:	df 92       	push	r13
    1444:	ef 92       	push	r14
    1446:	ff 92       	push	r15
    1448:	0f 93       	push	r16
    144a:	1f 93       	push	r17
    144c:	cf 93       	push	r28
    144e:	df 93       	push	r29
    1450:	00 d0       	rcall	.+0      	; 0x1452 <str_writeudec16+0x18>
    1452:	00 d0       	rcall	.+0      	; 0x1454 <str_writeudec16+0x1a>
    1454:	1f 92       	push	r1
    1456:	cd b7       	in	r28, 0x3d	; 61
    1458:	de b7       	in	r29, 0x3e	; 62
    145a:	fc 01       	movw	r30, r24
    145c:	6b 01       	movw	r12, r22
    145e:	9e 01       	movw	r18, r28
    1460:	2f 5f       	subi	r18, 0xFF	; 255
    1462:	3f 4f       	sbci	r19, 0xFF	; 255
    1464:	8e 01       	movw	r16, r28
    1466:	0a 5f       	subi	r16, 0xFA	; 250
    1468:	1f 4f       	sbci	r17, 0xFF	; 255
    146a:	ee 24       	eor	r14, r14
    146c:	e3 94       	inc	r14
    146e:	f1 2c       	mov	r15, r1
    1470:	9a e0       	ldi	r25, 0x0A	; 10
    1472:	99 2e       	mov	r9, r25
    1474:	9e 9c       	mul	r9, r14
    1476:	50 01       	movw	r10, r0
    1478:	9f 9c       	mul	r9, r15
    147a:	b0 0c       	add	r11, r0
    147c:	11 24       	eor	r1, r1
    147e:	c6 01       	movw	r24, r12
    1480:	b5 01       	movw	r22, r10
    1482:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <__udivmodhi4>
    1486:	b7 01       	movw	r22, r14
    1488:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <__udivmodhi4>
    148c:	d9 01       	movw	r26, r18
    148e:	6d 93       	st	X+, r22
    1490:	9d 01       	movw	r18, r26
    1492:	c6 1a       	sub	r12, r22
    1494:	d1 08       	sbc	r13, r1
    1496:	67 fd       	sbrc	r22, 7
    1498:	d3 94       	inc	r13
    149a:	75 01       	movw	r14, r10
    149c:	a0 17       	cp	r26, r16
    149e:	b1 07       	cpc	r27, r17
    14a0:	49 f7       	brne	.-46     	; 0x1474 <str_writeudec16+0x3a>
    14a2:	60 e0       	ldi	r22, 0x00	; 0
    14a4:	70 e0       	ldi	r23, 0x00	; 0
    14a6:	84 e0       	ldi	r24, 0x04	; 4
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	50 e0       	ldi	r21, 0x00	; 0
    14ac:	d8 01       	movw	r26, r16
    14ae:	2e 91       	ld	r18, -X
    14b0:	8d 01       	movw	r16, r26
    14b2:	21 11       	cpse	r18, r1
    14b4:	05 c0       	rjmp	.+10     	; 0x14c0 <str_writeudec16+0x86>
    14b6:	61 15       	cp	r22, r1
    14b8:	71 05       	cpc	r23, r1
    14ba:	11 f4       	brne	.+4      	; 0x14c0 <str_writeudec16+0x86>
    14bc:	00 97       	sbiw	r24, 0x00	; 0
    14be:	41 f4       	brne	.+16     	; 0x14d0 <str_writeudec16+0x96>
    14c0:	84 17       	cp	r24, r20
    14c2:	95 07       	cpc	r25, r21
    14c4:	2c f4       	brge	.+10     	; 0x14d0 <str_writeudec16+0x96>
    14c6:	20 5d       	subi	r18, 0xD0	; 208
    14c8:	21 93       	st	Z+, r18
    14ca:	61 e0       	ldi	r22, 0x01	; 1
    14cc:	70 e0       	ldi	r23, 0x00	; 0
    14ce:	04 c0       	rjmp	.+8      	; 0x14d8 <str_writeudec16+0x9e>
    14d0:	84 17       	cp	r24, r20
    14d2:	95 07       	cpc	r25, r21
    14d4:	0c f4       	brge	.+2      	; 0x14d8 <str_writeudec16+0x9e>
    14d6:	31 96       	adiw	r30, 0x01	; 1
    14d8:	01 97       	sbiw	r24, 0x01	; 1
    14da:	40 f7       	brcc	.-48     	; 0x14ac <str_writeudec16+0x72>
    14dc:	0f 90       	pop	r0
    14de:	0f 90       	pop	r0
    14e0:	0f 90       	pop	r0
    14e2:	0f 90       	pop	r0
    14e4:	0f 90       	pop	r0
    14e6:	df 91       	pop	r29
    14e8:	cf 91       	pop	r28
    14ea:	1f 91       	pop	r17
    14ec:	0f 91       	pop	r16
    14ee:	ff 90       	pop	r15
    14f0:	ef 90       	pop	r14
    14f2:	df 90       	pop	r13
    14f4:	cf 90       	pop	r12
    14f6:	bf 90       	pop	r11
    14f8:	af 90       	pop	r10
    14fa:	9f 90       	pop	r9
    14fc:	08 95       	ret

000014fe <__vector_11>:
    14fe:	1f 92       	push	r1
    1500:	0f 92       	push	r0
    1502:	0f b6       	in	r0, 0x3f	; 63
    1504:	0f 92       	push	r0
    1506:	11 24       	eor	r1, r1
    1508:	8f 93       	push	r24
    150a:	9f 93       	push	r25
    150c:	af 93       	push	r26
    150e:	bf 93       	push	r27
    1510:	80 91 11 03 	lds	r24, 0x0311	; 0x800311 <timer1_count>
    1514:	90 91 12 03 	lds	r25, 0x0312	; 0x800312 <timer1_count+0x1>
    1518:	a0 91 13 03 	lds	r26, 0x0313	; 0x800313 <timer1_count+0x2>
    151c:	b0 91 14 03 	lds	r27, 0x0314	; 0x800314 <timer1_count+0x3>
    1520:	01 96       	adiw	r24, 0x01	; 1
    1522:	a1 1d       	adc	r26, r1
    1524:	b1 1d       	adc	r27, r1
    1526:	80 93 11 03 	sts	0x0311, r24	; 0x800311 <timer1_count>
    152a:	90 93 12 03 	sts	0x0312, r25	; 0x800312 <timer1_count+0x1>
    152e:	a0 93 13 03 	sts	0x0313, r26	; 0x800313 <timer1_count+0x2>
    1532:	b0 93 14 03 	sts	0x0314, r27	; 0x800314 <timer1_count+0x3>
    1536:	bf 91       	pop	r27
    1538:	af 91       	pop	r26
    153a:	9f 91       	pop	r25
    153c:	8f 91       	pop	r24
    153e:	0f 90       	pop	r0
    1540:	0f be       	out	0x3f, r0	; 63
    1542:	0f 90       	pop	r0
    1544:	1f 90       	pop	r1
    1546:	18 95       	reti

00001548 <timer1_init>:
    1548:	83 e2       	ldi	r24, 0x23	; 35
    154a:	94 ef       	ldi	r25, 0xF4	; 244
    154c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1550:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1554:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    1558:	8c e0       	ldi	r24, 0x0C	; 12
    155a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    155e:	82 e0       	ldi	r24, 0x02	; 2
    1560:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1564:	08 95       	ret

00001566 <timer1_get>:
    1566:	2f b7       	in	r18, 0x3f	; 63
    1568:	f8 94       	cli
    156a:	60 91 11 03 	lds	r22, 0x0311	; 0x800311 <timer1_count>
    156e:	70 91 12 03 	lds	r23, 0x0312	; 0x800312 <timer1_count+0x1>
    1572:	80 91 13 03 	lds	r24, 0x0313	; 0x800313 <timer1_count+0x2>
    1576:	90 91 14 03 	lds	r25, 0x0314	; 0x800314 <timer1_count+0x3>
    157a:	2f bf       	out	0x3f, r18	; 63
    157c:	08 95       	ret

0000157e <timer1_clear>:
    157e:	8f b7       	in	r24, 0x3f	; 63
    1580:	f8 94       	cli
    1582:	10 92 11 03 	sts	0x0311, r1	; 0x800311 <timer1_count>
    1586:	10 92 12 03 	sts	0x0312, r1	; 0x800312 <timer1_count+0x1>
    158a:	10 92 13 03 	sts	0x0313, r1	; 0x800313 <timer1_count+0x2>
    158e:	10 92 14 03 	sts	0x0314, r1	; 0x800314 <timer1_count+0x3>
    1592:	8f bf       	out	0x3f, r24	; 63
    1594:	08 95       	ret

00001596 <uart_init>:
    1596:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <serial_init>
    159a:	78 94       	sei
    159c:	08 95       	ret

0000159e <uart_writechar>:
    159e:	0c 94 8d 0d 	jmp	0x1b1a	; 0x1b1a <serial_writechar>

000015a2 <uart_writestr>:
    15a2:	cf 93       	push	r28
    15a4:	df 93       	push	r29
    15a6:	ec 01       	movw	r28, r24
    15a8:	89 91       	ld	r24, Y+
    15aa:	88 23       	and	r24, r24
    15ac:	19 f0       	breq	.+6      	; 0x15b4 <uart_writestr+0x12>
    15ae:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <serial_writechar>
    15b2:	fa cf       	rjmp	.-12     	; 0x15a8 <uart_writestr+0x6>
    15b4:	df 91       	pop	r29
    15b6:	cf 91       	pop	r28
    15b8:	08 95       	ret

000015ba <uart_writehex8>:
    15ba:	cf 93       	push	r28
    15bc:	c8 2f       	mov	r28, r24
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	24 e0       	ldi	r18, 0x04	; 4
    15c2:	95 95       	asr	r25
    15c4:	87 95       	ror	r24
    15c6:	2a 95       	dec	r18
    15c8:	e1 f7       	brne	.-8      	; 0x15c2 <uart_writehex8+0x8>
    15ca:	8a 30       	cpi	r24, 0x0A	; 10
    15cc:	10 f4       	brcc	.+4      	; 0x15d2 <uart_writehex8+0x18>
    15ce:	80 5d       	subi	r24, 0xD0	; 208
    15d0:	01 c0       	rjmp	.+2      	; 0x15d4 <uart_writehex8+0x1a>
    15d2:	89 5c       	subi	r24, 0xC9	; 201
    15d4:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <serial_writechar>
    15d8:	8c 2f       	mov	r24, r28
    15da:	8f 70       	andi	r24, 0x0F	; 15
    15dc:	8a 30       	cpi	r24, 0x0A	; 10
    15de:	10 f0       	brcs	.+4      	; 0x15e4 <uart_writehex8+0x2a>
    15e0:	89 5c       	subi	r24, 0xC9	; 201
    15e2:	01 c0       	rjmp	.+2      	; 0x15e6 <uart_writehex8+0x2c>
    15e4:	80 5d       	subi	r24, 0xD0	; 208
    15e6:	cf 91       	pop	r28
    15e8:	0c 94 8d 0d 	jmp	0x1b1a	; 0x1b1a <serial_writechar>

000015ec <uart_writehex16>:
    15ec:	cf 93       	push	r28
    15ee:	c8 2f       	mov	r28, r24
    15f0:	89 2f       	mov	r24, r25
    15f2:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <uart_writehex8>
    15f6:	8c 2f       	mov	r24, r28
    15f8:	cf 91       	pop	r28
    15fa:	0c 94 dd 0a 	jmp	0x15ba	; 0x15ba <uart_writehex8>

000015fe <uart_writedec32>:
    15fe:	2f 92       	push	r2
    1600:	3f 92       	push	r3
    1602:	4f 92       	push	r4
    1604:	5f 92       	push	r5
    1606:	6f 92       	push	r6
    1608:	7f 92       	push	r7
    160a:	8f 92       	push	r8
    160c:	9f 92       	push	r9
    160e:	af 92       	push	r10
    1610:	bf 92       	push	r11
    1612:	cf 92       	push	r12
    1614:	df 92       	push	r13
    1616:	ef 92       	push	r14
    1618:	ff 92       	push	r15
    161a:	0f 93       	push	r16
    161c:	1f 93       	push	r17
    161e:	cf 93       	push	r28
    1620:	df 93       	push	r29
    1622:	cd b7       	in	r28, 0x3d	; 61
    1624:	de b7       	in	r29, 0x3e	; 62
    1626:	63 97       	sbiw	r28, 0x13	; 19
    1628:	0f b6       	in	r0, 0x3f	; 63
    162a:	f8 94       	cli
    162c:	de bf       	out	0x3e, r29	; 62
    162e:	0f be       	out	0x3f, r0	; 63
    1630:	cd bf       	out	0x3d, r28	; 61
    1632:	6b 01       	movw	r12, r22
    1634:	7c 01       	movw	r14, r24
    1636:	97 ff       	sbrs	r25, 7
    1638:	0d c0       	rjmp	.+26     	; 0x1654 <uart_writedec32+0x56>
    163a:	f0 94       	com	r15
    163c:	e0 94       	com	r14
    163e:	d0 94       	com	r13
    1640:	c0 94       	com	r12
    1642:	c1 1c       	adc	r12, r1
    1644:	d1 1c       	adc	r13, r1
    1646:	e1 1c       	adc	r14, r1
    1648:	f1 1c       	adc	r15, r1
    164a:	81 e0       	ldi	r24, 0x01	; 1
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	9b 8b       	std	Y+19, r25	; 0x13
    1650:	8a 8b       	std	Y+18, r24	; 0x12
    1652:	02 c0       	rjmp	.+4      	; 0x1658 <uart_writedec32+0x5a>
    1654:	1b 8a       	std	Y+19, r1	; 0x13
    1656:	1a 8a       	std	Y+18, r1	; 0x12
    1658:	fe 01       	movw	r30, r28
    165a:	31 96       	adiw	r30, 0x01	; 1
    165c:	5f 01       	movw	r10, r30
    165e:	8e 01       	movw	r16, r28
    1660:	05 5f       	subi	r16, 0xF5	; 245
    1662:	1f 4f       	sbci	r17, 0xFF	; 255
    1664:	f9 8b       	std	Y+17, r31	; 0x11
    1666:	e8 8b       	std	Y+16, r30	; 0x10
    1668:	66 24       	eor	r6, r6
    166a:	63 94       	inc	r6
    166c:	71 2c       	mov	r7, r1
    166e:	81 2c       	mov	r8, r1
    1670:	91 2c       	mov	r9, r1
    1672:	aa e0       	ldi	r26, 0x0A	; 10
    1674:	b0 e0       	ldi	r27, 0x00	; 0
    1676:	93 01       	movw	r18, r6
    1678:	a4 01       	movw	r20, r8
    167a:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <__muluhisi3>
    167e:	1b 01       	movw	r2, r22
    1680:	2c 01       	movw	r4, r24
    1682:	c7 01       	movw	r24, r14
    1684:	b6 01       	movw	r22, r12
    1686:	91 01       	movw	r18, r2
    1688:	a2 01       	movw	r20, r4
    168a:	0e 94 41 0e 	call	0x1c82	; 0x1c82 <__divmodsi4>
    168e:	93 01       	movw	r18, r6
    1690:	a4 01       	movw	r20, r8
    1692:	0e 94 41 0e 	call	0x1c82	; 0x1c82 <__divmodsi4>
    1696:	e8 89       	ldd	r30, Y+16	; 0x10
    1698:	f9 89       	ldd	r31, Y+17	; 0x11
    169a:	21 93       	st	Z+, r18
    169c:	f9 8b       	std	Y+17, r31	; 0x11
    169e:	e8 8b       	std	Y+16, r30	; 0x10
    16a0:	82 2f       	mov	r24, r18
    16a2:	22 0f       	add	r18, r18
    16a4:	99 0b       	sbc	r25, r25
    16a6:	aa 0b       	sbc	r26, r26
    16a8:	bb 0b       	sbc	r27, r27
    16aa:	c8 1a       	sub	r12, r24
    16ac:	d9 0a       	sbc	r13, r25
    16ae:	ea 0a       	sbc	r14, r26
    16b0:	fb 0a       	sbc	r15, r27
    16b2:	31 01       	movw	r6, r2
    16b4:	42 01       	movw	r8, r4
    16b6:	0e 17       	cp	r16, r30
    16b8:	1f 07       	cpc	r17, r31
    16ba:	d9 f6       	brne	.-74     	; 0x1672 <uart_writedec32+0x74>
    16bc:	8a 89       	ldd	r24, Y+18	; 0x12
    16be:	9b 89       	ldd	r25, Y+19	; 0x13
    16c0:	89 2b       	or	r24, r25
    16c2:	11 f0       	breq	.+4      	; 0x16c8 <uart_writedec32+0xca>
    16c4:	8d e2       	ldi	r24, 0x2D	; 45
    16c6:	01 c0       	rjmp	.+2      	; 0x16ca <uart_writedec32+0xcc>
    16c8:	80 e2       	ldi	r24, 0x20	; 32
    16ca:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <serial_writechar>
    16ce:	20 e0       	ldi	r18, 0x00	; 0
    16d0:	30 e0       	ldi	r19, 0x00	; 0
    16d2:	f8 01       	movw	r30, r16
    16d4:	82 91       	ld	r24, -Z
    16d6:	8f 01       	movw	r16, r30
    16d8:	81 11       	cpse	r24, r1
    16da:	06 c0       	rjmp	.+12     	; 0x16e8 <uart_writedec32+0xea>
    16dc:	21 15       	cp	r18, r1
    16de:	31 05       	cpc	r19, r1
    16e0:	19 f4       	brne	.+6      	; 0x16e8 <uart_writedec32+0xea>
    16e2:	ea 15       	cp	r30, r10
    16e4:	fb 05       	cpc	r31, r11
    16e6:	29 f4       	brne	.+10     	; 0x16f2 <uart_writedec32+0xf4>
    16e8:	80 5d       	subi	r24, 0xD0	; 208
    16ea:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <serial_writechar>
    16ee:	21 e0       	ldi	r18, 0x01	; 1
    16f0:	30 e0       	ldi	r19, 0x00	; 0
    16f2:	0a 15       	cp	r16, r10
    16f4:	1b 05       	cpc	r17, r11
    16f6:	69 f7       	brne	.-38     	; 0x16d2 <uart_writedec32+0xd4>
    16f8:	63 96       	adiw	r28, 0x13	; 19
    16fa:	0f b6       	in	r0, 0x3f	; 63
    16fc:	f8 94       	cli
    16fe:	de bf       	out	0x3e, r29	; 62
    1700:	0f be       	out	0x3f, r0	; 63
    1702:	cd bf       	out	0x3d, r28	; 61
    1704:	df 91       	pop	r29
    1706:	cf 91       	pop	r28
    1708:	1f 91       	pop	r17
    170a:	0f 91       	pop	r16
    170c:	ff 90       	pop	r15
    170e:	ef 90       	pop	r14
    1710:	df 90       	pop	r13
    1712:	cf 90       	pop	r12
    1714:	bf 90       	pop	r11
    1716:	af 90       	pop	r10
    1718:	9f 90       	pop	r9
    171a:	8f 90       	pop	r8
    171c:	7f 90       	pop	r7
    171e:	6f 90       	pop	r6
    1720:	5f 90       	pop	r5
    1722:	4f 90       	pop	r4
    1724:	3f 90       	pop	r3
    1726:	2f 90       	pop	r2
    1728:	08 95       	ret

0000172a <dump_eeprom>:
    172a:	2f 92       	push	r2
    172c:	3f 92       	push	r3
    172e:	4f 92       	push	r4
    1730:	5f 92       	push	r5
    1732:	6f 92       	push	r6
    1734:	7f 92       	push	r7
    1736:	8f 92       	push	r8
    1738:	9f 92       	push	r9
    173a:	af 92       	push	r10
    173c:	bf 92       	push	r11
    173e:	cf 92       	push	r12
    1740:	df 92       	push	r13
    1742:	ef 92       	push	r14
    1744:	ff 92       	push	r15
    1746:	0f 93       	push	r16
    1748:	1f 93       	push	r17
    174a:	cf 93       	push	r28
    174c:	df 93       	push	r29
    174e:	cd b7       	in	r28, 0x3d	; 61
    1750:	de b7       	in	r29, 0x3e	; 62
    1752:	64 97       	sbiw	r28, 0x14	; 20
    1754:	0f b6       	in	r0, 0x3f	; 63
    1756:	f8 94       	cli
    1758:	de bf       	out	0x3e, r29	; 62
    175a:	0f be       	out	0x3f, r0	; 63
    175c:	cd bf       	out	0x3d, r28	; 61
    175e:	8c 01       	movw	r16, r24
    1760:	61 15       	cp	r22, r1
    1762:	71 05       	cpc	r23, r1
    1764:	09 f4       	brne	.+2      	; 0x1768 <dump_eeprom+0x3e>
    1766:	92 c0       	rjmp	.+292    	; 0x188c <dump_eeprom+0x162>
    1768:	81 2c       	mov	r8, r1
    176a:	91 2c       	mov	r9, r1
    176c:	54 01       	movw	r10, r8
    176e:	cb 01       	movw	r24, r22
    1770:	a0 e0       	ldi	r26, 0x00	; 0
    1772:	b0 e0       	ldi	r27, 0x00	; 0
    1774:	89 8b       	std	Y+17, r24	; 0x11
    1776:	9a 8b       	std	Y+18, r25	; 0x12
    1778:	ab 8b       	std	Y+19, r26	; 0x13
    177a:	bc 8b       	std	Y+20, r27	; 0x14
    177c:	de 01       	movw	r26, r28
    177e:	11 96       	adiw	r26, 0x01	; 1
    1780:	1d 01       	movw	r2, r26
    1782:	89 89       	ldd	r24, Y+17	; 0x11
    1784:	9a 89       	ldd	r25, Y+18	; 0x12
    1786:	ab 89       	ldd	r26, Y+19	; 0x13
    1788:	bc 89       	ldd	r27, Y+20	; 0x14
    178a:	88 16       	cp	r8, r24
    178c:	99 06       	cpc	r9, r25
    178e:	aa 06       	cpc	r10, r26
    1790:	bb 06       	cpc	r11, r27
    1792:	08 f0       	brcs	.+2      	; 0x1796 <dump_eeprom+0x6c>
    1794:	7b c0       	rjmp	.+246    	; 0x188c <dump_eeprom+0x162>
    1796:	81 2f       	mov	r24, r17
    1798:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <uart_writehex8>
    179c:	80 2f       	mov	r24, r16
    179e:	80 7f       	andi	r24, 0xF0	; 240
    17a0:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <uart_writehex8>
    17a4:	80 e2       	ldi	r24, 0x20	; 32
    17a6:	0e 94 cf 0a 	call	0x159e	; 0x159e <uart_writechar>
    17aa:	61 01       	movw	r12, r2
    17ac:	78 01       	movw	r14, r16
    17ae:	41 2c       	mov	r4, r1
    17b0:	51 2c       	mov	r5, r1
    17b2:	32 01       	movw	r6, r4
    17b4:	41 e0       	ldi	r20, 0x01	; 1
    17b6:	b6 01       	movw	r22, r12
    17b8:	c7 01       	movw	r24, r14
    17ba:	0e 94 b8 01 	call	0x370	; 0x370 <eeprom_readbuf>
    17be:	bf ef       	ldi	r27, 0xFF	; 255
    17c0:	eb 1a       	sub	r14, r27
    17c2:	fb 0a       	sbc	r15, r27
    17c4:	ef ef       	ldi	r30, 0xFF	; 255
    17c6:	4e 1a       	sub	r4, r30
    17c8:	5e 0a       	sbc	r5, r30
    17ca:	6e 0a       	sbc	r6, r30
    17cc:	7e 0a       	sbc	r7, r30
    17ce:	ff ef       	ldi	r31, 0xFF	; 255
    17d0:	8f 1a       	sub	r8, r31
    17d2:	9f 0a       	sbc	r9, r31
    17d4:	af 0a       	sbc	r10, r31
    17d6:	bf 0a       	sbc	r11, r31
    17d8:	89 89       	ldd	r24, Y+17	; 0x11
    17da:	9a 89       	ldd	r25, Y+18	; 0x12
    17dc:	ab 89       	ldd	r26, Y+19	; 0x13
    17de:	bc 89       	ldd	r27, Y+20	; 0x14
    17e0:	88 16       	cp	r8, r24
    17e2:	99 06       	cpc	r9, r25
    17e4:	aa 06       	cpc	r10, r26
    17e6:	bb 06       	cpc	r11, r27
    17e8:	50 f0       	brcs	.+20     	; 0x17fe <dump_eeprom+0xd4>
    17ea:	68 01       	movw	r12, r16
    17ec:	9f e0       	ldi	r25, 0x0F	; 15
    17ee:	c9 22       	and	r12, r25
    17f0:	dd 24       	eor	r13, r13
    17f2:	00 e0       	ldi	r16, 0x00	; 0
    17f4:	10 e0       	ldi	r17, 0x00	; 0
    17f6:	32 01       	movw	r6, r4
    17f8:	6c 0c       	add	r6, r12
    17fa:	7d 1c       	adc	r7, r13
    17fc:	09 c0       	rjmp	.+18     	; 0x1810 <dump_eeprom+0xe6>
    17fe:	af ef       	ldi	r26, 0xFF	; 255
    1800:	ca 1a       	sub	r12, r26
    1802:	da 0a       	sbc	r13, r26
    1804:	c7 01       	movw	r24, r14
    1806:	8f 70       	andi	r24, 0x0F	; 15
    1808:	99 27       	eor	r25, r25
    180a:	89 2b       	or	r24, r25
    180c:	99 f6       	brne	.-90     	; 0x17b4 <dump_eeprom+0x8a>
    180e:	ed cf       	rjmp	.-38     	; 0x17ea <dump_eeprom+0xc0>
    1810:	0c 15       	cp	r16, r12
    1812:	1d 05       	cpc	r17, r13
    1814:	18 f0       	brcs	.+6      	; 0x181c <dump_eeprom+0xf2>
    1816:	06 15       	cp	r16, r6
    1818:	17 05       	cpc	r17, r7
    181a:	28 f0       	brcs	.+10     	; 0x1826 <dump_eeprom+0xfc>
    181c:	84 e8       	ldi	r24, 0x84	; 132
    181e:	91 e0       	ldi	r25, 0x01	; 1
    1820:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <uart_writestr>
    1824:	0b c0       	rjmp	.+22     	; 0x183c <dump_eeprom+0x112>
    1826:	f8 01       	movw	r30, r16
    1828:	ec 19       	sub	r30, r12
    182a:	fd 09       	sbc	r31, r13
    182c:	e2 0d       	add	r30, r2
    182e:	f3 1d       	adc	r31, r3
    1830:	80 81       	ld	r24, Z
    1832:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <uart_writehex8>
    1836:	80 e2       	ldi	r24, 0x20	; 32
    1838:	0e 94 cf 0a 	call	0x159e	; 0x159e <uart_writechar>
    183c:	0f 5f       	subi	r16, 0xFF	; 255
    183e:	1f 4f       	sbci	r17, 0xFF	; 255
    1840:	00 31       	cpi	r16, 0x10	; 16
    1842:	11 05       	cpc	r17, r1
    1844:	29 f7       	brne	.-54     	; 0x1810 <dump_eeprom+0xe6>
    1846:	00 e0       	ldi	r16, 0x00	; 0
    1848:	10 e0       	ldi	r17, 0x00	; 0
    184a:	c0 16       	cp	r12, r16
    184c:	d1 06       	cpc	r13, r17
    184e:	31 f0       	breq	.+12     	; 0x185c <dump_eeprom+0x132>
    1850:	80 e2       	ldi	r24, 0x20	; 32
    1852:	0e 94 cf 0a 	call	0x159e	; 0x159e <uart_writechar>
    1856:	0f 5f       	subi	r16, 0xFF	; 255
    1858:	1f 4f       	sbci	r17, 0xFF	; 255
    185a:	f7 cf       	rjmp	.-18     	; 0x184a <dump_eeprom+0x120>
    185c:	81 01       	movw	r16, r2
    185e:	c8 01       	movw	r24, r16
    1860:	82 19       	sub	r24, r2
    1862:	93 09       	sbc	r25, r3
    1864:	84 15       	cp	r24, r4
    1866:	95 05       	cpc	r25, r5
    1868:	58 f4       	brcc	.+22     	; 0x1880 <dump_eeprom+0x156>
    186a:	f8 01       	movw	r30, r16
    186c:	81 91       	ld	r24, Z+
    186e:	8f 01       	movw	r16, r30
    1870:	90 ee       	ldi	r25, 0xE0	; 224
    1872:	98 0f       	add	r25, r24
    1874:	90 36       	cpi	r25, 0x60	; 96
    1876:	08 f0       	brcs	.+2      	; 0x187a <dump_eeprom+0x150>
    1878:	8e e2       	ldi	r24, 0x2E	; 46
    187a:	0e 94 cf 0a 	call	0x159e	; 0x159e <uart_writechar>
    187e:	ef cf       	rjmp	.-34     	; 0x185e <dump_eeprom+0x134>
    1880:	88 e8       	ldi	r24, 0x88	; 136
    1882:	91 e0       	ldi	r25, 0x01	; 1
    1884:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <uart_writestr>
    1888:	87 01       	movw	r16, r14
    188a:	7b cf       	rjmp	.-266    	; 0x1782 <dump_eeprom+0x58>
    188c:	64 96       	adiw	r28, 0x14	; 20
    188e:	0f b6       	in	r0, 0x3f	; 63
    1890:	f8 94       	cli
    1892:	de bf       	out	0x3e, r29	; 62
    1894:	0f be       	out	0x3f, r0	; 63
    1896:	cd bf       	out	0x3d, r28	; 61
    1898:	df 91       	pop	r29
    189a:	cf 91       	pop	r28
    189c:	1f 91       	pop	r17
    189e:	0f 91       	pop	r16
    18a0:	ff 90       	pop	r15
    18a2:	ef 90       	pop	r14
    18a4:	df 90       	pop	r13
    18a6:	cf 90       	pop	r12
    18a8:	bf 90       	pop	r11
    18aa:	af 90       	pop	r10
    18ac:	9f 90       	pop	r9
    18ae:	8f 90       	pop	r8
    18b0:	7f 90       	pop	r7
    18b2:	6f 90       	pop	r6
    18b4:	5f 90       	pop	r5
    18b6:	4f 90       	pop	r4
    18b8:	3f 90       	pop	r3
    18ba:	2f 90       	pop	r2
    18bc:	08 95       	ret

000018be <__vector_14>:
    18be:	1f 92       	push	r1
    18c0:	0f 92       	push	r0
    18c2:	0f b6       	in	r0, 0x3f	; 63
    18c4:	0f 92       	push	r0
    18c6:	11 24       	eor	r1, r1
    18c8:	2f 93       	push	r18
    18ca:	3f 93       	push	r19
    18cc:	8f 93       	push	r24
    18ce:	9f 93       	push	r25
    18d0:	20 91 1b 03 	lds	r18, 0x031B	; 0x80031b <delay_count>
    18d4:	30 91 1c 03 	lds	r19, 0x031C	; 0x80031c <delay_count+0x1>
    18d8:	80 91 17 03 	lds	r24, 0x0317	; 0x800317 <delay_limit>
    18dc:	90 91 18 03 	lds	r25, 0x0318	; 0x800318 <delay_limit+0x1>
    18e0:	28 17       	cp	r18, r24
    18e2:	39 07       	cpc	r19, r25
    18e4:	49 f0       	breq	.+18     	; 0x18f8 <__vector_14+0x3a>
    18e6:	80 91 1b 03 	lds	r24, 0x031B	; 0x80031b <delay_count>
    18ea:	90 91 1c 03 	lds	r25, 0x031C	; 0x80031c <delay_count+0x1>
    18ee:	01 96       	adiw	r24, 0x01	; 1
    18f0:	90 93 1c 03 	sts	0x031C, r25	; 0x80031c <delay_count+0x1>
    18f4:	80 93 1b 03 	sts	0x031B, r24	; 0x80031b <delay_count>
    18f8:	20 91 1d 03 	lds	r18, 0x031D	; 0x80031d <delay_count+0x2>
    18fc:	30 91 1e 03 	lds	r19, 0x031E	; 0x80031e <delay_count+0x3>
    1900:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <delay_limit+0x2>
    1904:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <delay_limit+0x3>
    1908:	28 17       	cp	r18, r24
    190a:	39 07       	cpc	r19, r25
    190c:	49 f0       	breq	.+18     	; 0x1920 <__vector_14+0x62>
    190e:	80 91 1d 03 	lds	r24, 0x031D	; 0x80031d <delay_count+0x2>
    1912:	90 91 1e 03 	lds	r25, 0x031E	; 0x80031e <delay_count+0x3>
    1916:	01 96       	adiw	r24, 0x01	; 1
    1918:	90 93 1e 03 	sts	0x031E, r25	; 0x80031e <delay_count+0x3>
    191c:	80 93 1d 03 	sts	0x031D, r24	; 0x80031d <delay_count+0x2>
    1920:	9f 91       	pop	r25
    1922:	8f 91       	pop	r24
    1924:	3f 91       	pop	r19
    1926:	2f 91       	pop	r18
    1928:	0f 90       	pop	r0
    192a:	0f be       	out	0x3f, r0	; 63
    192c:	0f 90       	pop	r0
    192e:	1f 90       	pop	r1
    1930:	18 95       	reti

00001932 <delay_init>:
    1932:	89 ef       	ldi	r24, 0xF9	; 249
    1934:	87 bd       	out	0x27, r24	; 39
    1936:	82 e0       	ldi	r24, 0x02	; 2
    1938:	84 bd       	out	0x24, r24	; 36
    193a:	93 e0       	ldi	r25, 0x03	; 3
    193c:	95 bd       	out	0x25, r25	; 37
    193e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
    1942:	08 95       	ret

00001944 <delay_get>:
    1944:	82 30       	cpi	r24, 0x02	; 2
    1946:	91 05       	cpc	r25, r1
    1948:	50 f4       	brcc	.+20     	; 0x195e <delay_get+0x1a>
    194a:	f8 94       	cli
    194c:	88 0f       	add	r24, r24
    194e:	99 1f       	adc	r25, r25
    1950:	fc 01       	movw	r30, r24
    1952:	e5 5e       	subi	r30, 0xE5	; 229
    1954:	fc 4f       	sbci	r31, 0xFC	; 252
    1956:	80 81       	ld	r24, Z
    1958:	91 81       	ldd	r25, Z+1	; 0x01
    195a:	78 94       	sei
    195c:	08 95       	ret
    195e:	80 e0       	ldi	r24, 0x00	; 0
    1960:	90 e0       	ldi	r25, 0x00	; 0
    1962:	08 95       	ret

00001964 <delay_isdone>:
    1964:	82 30       	cpi	r24, 0x02	; 2
    1966:	91 05       	cpc	r25, r1
    1968:	98 f4       	brcc	.+38     	; 0x1990 <delay_isdone+0x2c>
    196a:	88 0f       	add	r24, r24
    196c:	99 1f       	adc	r25, r25
    196e:	fc 01       	movw	r30, r24
    1970:	e5 5e       	subi	r30, 0xE5	; 229
    1972:	fc 4f       	sbci	r31, 0xFC	; 252
    1974:	20 81       	ld	r18, Z
    1976:	31 81       	ldd	r19, Z+1	; 0x01
    1978:	fc 01       	movw	r30, r24
    197a:	e9 5e       	subi	r30, 0xE9	; 233
    197c:	fc 4f       	sbci	r31, 0xFC	; 252
    197e:	81 e0       	ldi	r24, 0x01	; 1
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	40 81       	ld	r20, Z
    1984:	51 81       	ldd	r21, Z+1	; 0x01
    1986:	42 17       	cp	r20, r18
    1988:	53 07       	cpc	r21, r19
    198a:	21 f0       	breq	.+8      	; 0x1994 <delay_isdone+0x30>
    198c:	80 e0       	ldi	r24, 0x00	; 0
    198e:	08 95       	ret
    1990:	80 e0       	ldi	r24, 0x00	; 0
    1992:	90 e0       	ldi	r25, 0x00	; 0
    1994:	08 95       	ret

00001996 <delay_set>:
    1996:	0f 93       	push	r16
    1998:	1f 93       	push	r17
    199a:	cf 93       	push	r28
    199c:	df 93       	push	r29
    199e:	ec 01       	movw	r28, r24
    19a0:	8b 01       	movw	r16, r22
    19a2:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <initialized.1590>
    19a6:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <initialized.1590+0x1>
    19aa:	89 2b       	or	r24, r25
    19ac:	41 f4       	brne	.+16     	; 0x19be <delay_set+0x28>
    19ae:	0e 94 99 0c 	call	0x1932	; 0x1932 <delay_init>
    19b2:	81 e0       	ldi	r24, 0x01	; 1
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <initialized.1590+0x1>
    19ba:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <initialized.1590>
    19be:	c2 30       	cpi	r28, 0x02	; 2
    19c0:	d1 05       	cpc	r29, r1
    19c2:	70 f4       	brcc	.+28     	; 0x19e0 <delay_set+0x4a>
    19c4:	8f b7       	in	r24, 0x3f	; 63
    19c6:	f8 94       	cli
    19c8:	cc 0f       	add	r28, r28
    19ca:	dd 1f       	adc	r29, r29
    19cc:	fe 01       	movw	r30, r28
    19ce:	e9 5e       	subi	r30, 0xE9	; 233
    19d0:	fc 4f       	sbci	r31, 0xFC	; 252
    19d2:	11 83       	std	Z+1, r17	; 0x01
    19d4:	00 83       	st	Z, r16
    19d6:	c5 5e       	subi	r28, 0xE5	; 229
    19d8:	dc 4f       	sbci	r29, 0xFC	; 252
    19da:	19 82       	std	Y+1, r1	; 0x01
    19dc:	18 82       	st	Y, r1
    19de:	8f bf       	out	0x3f, r24	; 63
    19e0:	df 91       	pop	r29
    19e2:	cf 91       	pop	r28
    19e4:	1f 91       	pop	r17
    19e6:	0f 91       	pop	r16
    19e8:	08 95       	ret

000019ea <serial_init>:
    19ea:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    19ee:	87 e6       	ldi	r24, 0x67	; 103
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    19f6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    19fa:	e1 ec       	ldi	r30, 0xC1	; 193
    19fc:	f0 e0       	ldi	r31, 0x00	; 0
    19fe:	88 e1       	ldi	r24, 0x18	; 24
    1a00:	80 83       	st	Z, r24
    1a02:	86 e0       	ldi	r24, 0x06	; 6
    1a04:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    1a08:	80 81       	ld	r24, Z
    1a0a:	80 6a       	ori	r24, 0xA0	; 160
    1a0c:	80 83       	st	Z, r24
    1a0e:	08 95       	ret

00001a10 <__vector_18>:
    1a10:	1f 92       	push	r1
    1a12:	0f 92       	push	r0
    1a14:	0f b6       	in	r0, 0x3f	; 63
    1a16:	0f 92       	push	r0
    1a18:	11 24       	eor	r1, r1
    1a1a:	2f 93       	push	r18
    1a1c:	8f 93       	push	r24
    1a1e:	9f 93       	push	r25
    1a20:	ef 93       	push	r30
    1a22:	ff 93       	push	r31
    1a24:	80 91 21 03 	lds	r24, 0x0321	; 0x800321 <rxtail>
    1a28:	20 91 22 03 	lds	r18, 0x0322	; 0x800322 <rxhead>
    1a2c:	90 e0       	ldi	r25, 0x00	; 0
    1a2e:	82 1b       	sub	r24, r18
    1a30:	91 09       	sbc	r25, r1
    1a32:	01 97       	sbiw	r24, 0x01	; 1
    1a34:	8f 73       	andi	r24, 0x3F	; 63
    1a36:	99 27       	eor	r25, r25
    1a38:	89 2b       	or	r24, r25
    1a3a:	79 f0       	breq	.+30     	; 0x1a5a <__vector_18+0x4a>
    1a3c:	e0 91 22 03 	lds	r30, 0x0322	; 0x800322 <rxhead>
    1a40:	f0 e0       	ldi	r31, 0x00	; 0
    1a42:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1a46:	e7 5c       	subi	r30, 0xC7	; 199
    1a48:	fc 4f       	sbci	r31, 0xFC	; 252
    1a4a:	80 83       	st	Z, r24
    1a4c:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <rxhead>
    1a50:	8f 5f       	subi	r24, 0xFF	; 255
    1a52:	8f 73       	andi	r24, 0x3F	; 63
    1a54:	80 93 22 03 	sts	0x0322, r24	; 0x800322 <rxhead>
    1a58:	02 c0       	rjmp	.+4      	; 0x1a5e <__vector_18+0x4e>
    1a5a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1a5e:	ff 91       	pop	r31
    1a60:	ef 91       	pop	r30
    1a62:	9f 91       	pop	r25
    1a64:	8f 91       	pop	r24
    1a66:	2f 91       	pop	r18
    1a68:	0f 90       	pop	r0
    1a6a:	0f be       	out	0x3f, r0	; 63
    1a6c:	0f 90       	pop	r0
    1a6e:	1f 90       	pop	r1
    1a70:	18 95       	reti

00001a72 <__vector_19>:
    1a72:	1f 92       	push	r1
    1a74:	0f 92       	push	r0
    1a76:	0f b6       	in	r0, 0x3f	; 63
    1a78:	0f 92       	push	r0
    1a7a:	11 24       	eor	r1, r1
    1a7c:	2f 93       	push	r18
    1a7e:	8f 93       	push	r24
    1a80:	9f 93       	push	r25
    1a82:	ef 93       	push	r30
    1a84:	ff 93       	push	r31
    1a86:	80 91 20 03 	lds	r24, 0x0320	; 0x800320 <txhead>
    1a8a:	20 91 1f 03 	lds	r18, 0x031F	; 0x80031f <txtail>
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	82 1b       	sub	r24, r18
    1a92:	91 09       	sbc	r25, r1
    1a94:	8f 73       	andi	r24, 0x3F	; 63
    1a96:	99 27       	eor	r25, r25
    1a98:	89 2b       	or	r24, r25
    1a9a:	79 f0       	breq	.+30     	; 0x1aba <__vector_19+0x48>
    1a9c:	e0 91 1f 03 	lds	r30, 0x031F	; 0x80031f <txtail>
    1aa0:	f0 e0       	ldi	r31, 0x00	; 0
    1aa2:	e7 58       	subi	r30, 0x87	; 135
    1aa4:	fc 4f       	sbci	r31, 0xFC	; 252
    1aa6:	80 81       	ld	r24, Z
    1aa8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1aac:	80 91 1f 03 	lds	r24, 0x031F	; 0x80031f <txtail>
    1ab0:	8f 5f       	subi	r24, 0xFF	; 255
    1ab2:	8f 73       	andi	r24, 0x3F	; 63
    1ab4:	80 93 1f 03 	sts	0x031F, r24	; 0x80031f <txtail>
    1ab8:	05 c0       	rjmp	.+10     	; 0x1ac4 <__vector_19+0x52>
    1aba:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1abe:	8f 7d       	andi	r24, 0xDF	; 223
    1ac0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1ac4:	ff 91       	pop	r31
    1ac6:	ef 91       	pop	r30
    1ac8:	9f 91       	pop	r25
    1aca:	8f 91       	pop	r24
    1acc:	2f 91       	pop	r18
    1ace:	0f 90       	pop	r0
    1ad0:	0f be       	out	0x3f, r0	; 63
    1ad2:	0f 90       	pop	r0
    1ad4:	1f 90       	pop	r1
    1ad6:	18 95       	reti

00001ad8 <serial_rxchars>:
    1ad8:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <rxhead>
    1adc:	90 91 21 03 	lds	r25, 0x0321	; 0x800321 <rxtail>
    1ae0:	89 1b       	sub	r24, r25
    1ae2:	8f 73       	andi	r24, 0x3F	; 63
    1ae4:	08 95       	ret

00001ae6 <serial_popchar>:
    1ae6:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <rxhead>
    1aea:	20 91 21 03 	lds	r18, 0x0321	; 0x800321 <rxtail>
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	82 1b       	sub	r24, r18
    1af2:	91 09       	sbc	r25, r1
    1af4:	8f 73       	andi	r24, 0x3F	; 63
    1af6:	99 27       	eor	r25, r25
    1af8:	89 2b       	or	r24, r25
    1afa:	69 f0       	breq	.+26     	; 0x1b16 <serial_popchar+0x30>
    1afc:	e0 91 21 03 	lds	r30, 0x0321	; 0x800321 <rxtail>
    1b00:	f0 e0       	ldi	r31, 0x00	; 0
    1b02:	e7 5c       	subi	r30, 0xC7	; 199
    1b04:	fc 4f       	sbci	r31, 0xFC	; 252
    1b06:	80 81       	ld	r24, Z
    1b08:	90 91 21 03 	lds	r25, 0x0321	; 0x800321 <rxtail>
    1b0c:	9f 5f       	subi	r25, 0xFF	; 255
    1b0e:	9f 73       	andi	r25, 0x3F	; 63
    1b10:	90 93 21 03 	sts	0x0321, r25	; 0x800321 <rxtail>
    1b14:	08 95       	ret
    1b16:	80 e0       	ldi	r24, 0x00	; 0
    1b18:	08 95       	ret

00001b1a <serial_writechar>:
    1b1a:	0f b6       	in	r0, 0x3f	; 63
    1b1c:	07 fe       	sbrs	r0, 7
    1b1e:	0e c0       	rjmp	.+28     	; 0x1b3c <serial_writechar+0x22>
    1b20:	20 91 1f 03 	lds	r18, 0x031F	; 0x80031f <txtail>
    1b24:	90 91 20 03 	lds	r25, 0x0320	; 0x800320 <txhead>
    1b28:	30 e0       	ldi	r19, 0x00	; 0
    1b2a:	29 1b       	sub	r18, r25
    1b2c:	31 09       	sbc	r19, r1
    1b2e:	21 50       	subi	r18, 0x01	; 1
    1b30:	31 09       	sbc	r19, r1
    1b32:	2f 73       	andi	r18, 0x3F	; 63
    1b34:	33 27       	eor	r19, r19
    1b36:	23 2b       	or	r18, r19
    1b38:	99 f3       	breq	.-26     	; 0x1b20 <serial_writechar+0x6>
    1b3a:	0d c0       	rjmp	.+26     	; 0x1b56 <serial_writechar+0x3c>
    1b3c:	20 91 1f 03 	lds	r18, 0x031F	; 0x80031f <txtail>
    1b40:	90 91 20 03 	lds	r25, 0x0320	; 0x800320 <txhead>
    1b44:	30 e0       	ldi	r19, 0x00	; 0
    1b46:	29 1b       	sub	r18, r25
    1b48:	31 09       	sbc	r19, r1
    1b4a:	21 50       	subi	r18, 0x01	; 1
    1b4c:	31 09       	sbc	r19, r1
    1b4e:	2f 73       	andi	r18, 0x3F	; 63
    1b50:	33 27       	eor	r19, r19
    1b52:	23 2b       	or	r18, r19
    1b54:	61 f0       	breq	.+24     	; 0x1b6e <serial_writechar+0x54>
    1b56:	e0 91 20 03 	lds	r30, 0x0320	; 0x800320 <txhead>
    1b5a:	f0 e0       	ldi	r31, 0x00	; 0
    1b5c:	e7 58       	subi	r30, 0x87	; 135
    1b5e:	fc 4f       	sbci	r31, 0xFC	; 252
    1b60:	80 83       	st	Z, r24
    1b62:	80 91 20 03 	lds	r24, 0x0320	; 0x800320 <txhead>
    1b66:	8f 5f       	subi	r24, 0xFF	; 255
    1b68:	8f 73       	andi	r24, 0x3F	; 63
    1b6a:	80 93 20 03 	sts	0x0320, r24	; 0x800320 <txhead>
    1b6e:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1b72:	80 62       	ori	r24, 0x20	; 32
    1b74:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1b78:	08 95       	ret

00001b7a <serial_writestr>:
    1b7a:	1f 93       	push	r17
    1b7c:	cf 93       	push	r28
    1b7e:	df 93       	push	r29
    1b80:	ec 01       	movw	r28, r24
    1b82:	80 e0       	ldi	r24, 0x00	; 0
    1b84:	11 e0       	ldi	r17, 0x01	; 1
    1b86:	18 0f       	add	r17, r24
    1b88:	fe 01       	movw	r30, r28
    1b8a:	e8 0f       	add	r30, r24
    1b8c:	f1 1d       	adc	r31, r1
    1b8e:	80 81       	ld	r24, Z
    1b90:	88 23       	and	r24, r24
    1b92:	21 f0       	breq	.+8      	; 0x1b9c <serial_writestr+0x22>
    1b94:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <serial_writechar>
    1b98:	81 2f       	mov	r24, r17
    1b9a:	f4 cf       	rjmp	.-24     	; 0x1b84 <serial_writestr+0xa>
    1b9c:	df 91       	pop	r29
    1b9e:	cf 91       	pop	r28
    1ba0:	1f 91       	pop	r17
    1ba2:	08 95       	ret

00001ba4 <serial_writestr_P>:
    1ba4:	1f 93       	push	r17
    1ba6:	cf 93       	push	r28
    1ba8:	df 93       	push	r29
    1baa:	ec 01       	movw	r28, r24
    1bac:	80 e0       	ldi	r24, 0x00	; 0
    1bae:	11 e0       	ldi	r17, 0x01	; 1
    1bb0:	18 0f       	add	r17, r24
    1bb2:	fe 01       	movw	r30, r28
    1bb4:	e8 0f       	add	r30, r24
    1bb6:	f1 1d       	adc	r31, r1
    1bb8:	84 91       	lpm	r24, Z
    1bba:	88 23       	and	r24, r24
    1bbc:	21 f0       	breq	.+8      	; 0x1bc6 <serial_writestr_P+0x22>
    1bbe:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <serial_writechar>
    1bc2:	81 2f       	mov	r24, r17
    1bc4:	f4 cf       	rjmp	.-24     	; 0x1bae <serial_writestr_P+0xa>
    1bc6:	df 91       	pop	r29
    1bc8:	cf 91       	pop	r28
    1bca:	1f 91       	pop	r17
    1bcc:	08 95       	ret

00001bce <__mulsi3>:
    1bce:	db 01       	movw	r26, r22
    1bd0:	8f 93       	push	r24
    1bd2:	9f 93       	push	r25
    1bd4:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <__muluhisi3>
    1bd8:	bf 91       	pop	r27
    1bda:	af 91       	pop	r26
    1bdc:	a2 9f       	mul	r26, r18
    1bde:	80 0d       	add	r24, r0
    1be0:	91 1d       	adc	r25, r1
    1be2:	a3 9f       	mul	r26, r19
    1be4:	90 0d       	add	r25, r0
    1be6:	b2 9f       	mul	r27, r18
    1be8:	90 0d       	add	r25, r0
    1bea:	11 24       	eor	r1, r1
    1bec:	08 95       	ret

00001bee <__udivmodhi4>:
    1bee:	aa 1b       	sub	r26, r26
    1bf0:	bb 1b       	sub	r27, r27
    1bf2:	51 e1       	ldi	r21, 0x11	; 17
    1bf4:	07 c0       	rjmp	.+14     	; 0x1c04 <__udivmodhi4_ep>

00001bf6 <__udivmodhi4_loop>:
    1bf6:	aa 1f       	adc	r26, r26
    1bf8:	bb 1f       	adc	r27, r27
    1bfa:	a6 17       	cp	r26, r22
    1bfc:	b7 07       	cpc	r27, r23
    1bfe:	10 f0       	brcs	.+4      	; 0x1c04 <__udivmodhi4_ep>
    1c00:	a6 1b       	sub	r26, r22
    1c02:	b7 0b       	sbc	r27, r23

00001c04 <__udivmodhi4_ep>:
    1c04:	88 1f       	adc	r24, r24
    1c06:	99 1f       	adc	r25, r25
    1c08:	5a 95       	dec	r21
    1c0a:	a9 f7       	brne	.-22     	; 0x1bf6 <__udivmodhi4_loop>
    1c0c:	80 95       	com	r24
    1c0e:	90 95       	com	r25
    1c10:	bc 01       	movw	r22, r24
    1c12:	cd 01       	movw	r24, r26
    1c14:	08 95       	ret

00001c16 <__divmodhi4>:
    1c16:	97 fb       	bst	r25, 7
    1c18:	07 2e       	mov	r0, r23
    1c1a:	16 f4       	brtc	.+4      	; 0x1c20 <__divmodhi4+0xa>
    1c1c:	00 94       	com	r0
    1c1e:	07 d0       	rcall	.+14     	; 0x1c2e <__divmodhi4_neg1>
    1c20:	77 fd       	sbrc	r23, 7
    1c22:	09 d0       	rcall	.+18     	; 0x1c36 <__divmodhi4_neg2>
    1c24:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <__udivmodhi4>
    1c28:	07 fc       	sbrc	r0, 7
    1c2a:	05 d0       	rcall	.+10     	; 0x1c36 <__divmodhi4_neg2>
    1c2c:	3e f4       	brtc	.+14     	; 0x1c3c <__divmodhi4_exit>

00001c2e <__divmodhi4_neg1>:
    1c2e:	90 95       	com	r25
    1c30:	81 95       	neg	r24
    1c32:	9f 4f       	sbci	r25, 0xFF	; 255
    1c34:	08 95       	ret

00001c36 <__divmodhi4_neg2>:
    1c36:	70 95       	com	r23
    1c38:	61 95       	neg	r22
    1c3a:	7f 4f       	sbci	r23, 0xFF	; 255

00001c3c <__divmodhi4_exit>:
    1c3c:	08 95       	ret

00001c3e <__udivmodsi4>:
    1c3e:	a1 e2       	ldi	r26, 0x21	; 33
    1c40:	1a 2e       	mov	r1, r26
    1c42:	aa 1b       	sub	r26, r26
    1c44:	bb 1b       	sub	r27, r27
    1c46:	fd 01       	movw	r30, r26
    1c48:	0d c0       	rjmp	.+26     	; 0x1c64 <__udivmodsi4_ep>

00001c4a <__udivmodsi4_loop>:
    1c4a:	aa 1f       	adc	r26, r26
    1c4c:	bb 1f       	adc	r27, r27
    1c4e:	ee 1f       	adc	r30, r30
    1c50:	ff 1f       	adc	r31, r31
    1c52:	a2 17       	cp	r26, r18
    1c54:	b3 07       	cpc	r27, r19
    1c56:	e4 07       	cpc	r30, r20
    1c58:	f5 07       	cpc	r31, r21
    1c5a:	20 f0       	brcs	.+8      	; 0x1c64 <__udivmodsi4_ep>
    1c5c:	a2 1b       	sub	r26, r18
    1c5e:	b3 0b       	sbc	r27, r19
    1c60:	e4 0b       	sbc	r30, r20
    1c62:	f5 0b       	sbc	r31, r21

00001c64 <__udivmodsi4_ep>:
    1c64:	66 1f       	adc	r22, r22
    1c66:	77 1f       	adc	r23, r23
    1c68:	88 1f       	adc	r24, r24
    1c6a:	99 1f       	adc	r25, r25
    1c6c:	1a 94       	dec	r1
    1c6e:	69 f7       	brne	.-38     	; 0x1c4a <__udivmodsi4_loop>
    1c70:	60 95       	com	r22
    1c72:	70 95       	com	r23
    1c74:	80 95       	com	r24
    1c76:	90 95       	com	r25
    1c78:	9b 01       	movw	r18, r22
    1c7a:	ac 01       	movw	r20, r24
    1c7c:	bd 01       	movw	r22, r26
    1c7e:	cf 01       	movw	r24, r30
    1c80:	08 95       	ret

00001c82 <__divmodsi4>:
    1c82:	05 2e       	mov	r0, r21
    1c84:	97 fb       	bst	r25, 7
    1c86:	1e f4       	brtc	.+6      	; 0x1c8e <__divmodsi4+0xc>
    1c88:	00 94       	com	r0
    1c8a:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <__negsi2>
    1c8e:	57 fd       	sbrc	r21, 7
    1c90:	07 d0       	rcall	.+14     	; 0x1ca0 <__divmodsi4_neg2>
    1c92:	0e 94 1f 0e 	call	0x1c3e	; 0x1c3e <__udivmodsi4>
    1c96:	07 fc       	sbrc	r0, 7
    1c98:	03 d0       	rcall	.+6      	; 0x1ca0 <__divmodsi4_neg2>
    1c9a:	4e f4       	brtc	.+18     	; 0x1cae <__divmodsi4_exit>
    1c9c:	0c 94 58 0e 	jmp	0x1cb0	; 0x1cb0 <__negsi2>

00001ca0 <__divmodsi4_neg2>:
    1ca0:	50 95       	com	r21
    1ca2:	40 95       	com	r20
    1ca4:	30 95       	com	r19
    1ca6:	21 95       	neg	r18
    1ca8:	3f 4f       	sbci	r19, 0xFF	; 255
    1caa:	4f 4f       	sbci	r20, 0xFF	; 255
    1cac:	5f 4f       	sbci	r21, 0xFF	; 255

00001cae <__divmodsi4_exit>:
    1cae:	08 95       	ret

00001cb0 <__negsi2>:
    1cb0:	90 95       	com	r25
    1cb2:	80 95       	com	r24
    1cb4:	70 95       	com	r23
    1cb6:	61 95       	neg	r22
    1cb8:	7f 4f       	sbci	r23, 0xFF	; 255
    1cba:	8f 4f       	sbci	r24, 0xFF	; 255
    1cbc:	9f 4f       	sbci	r25, 0xFF	; 255
    1cbe:	08 95       	ret

00001cc0 <__umulhisi3>:
    1cc0:	a2 9f       	mul	r26, r18
    1cc2:	b0 01       	movw	r22, r0
    1cc4:	b3 9f       	mul	r27, r19
    1cc6:	c0 01       	movw	r24, r0
    1cc8:	a3 9f       	mul	r26, r19
    1cca:	70 0d       	add	r23, r0
    1ccc:	81 1d       	adc	r24, r1
    1cce:	11 24       	eor	r1, r1
    1cd0:	91 1d       	adc	r25, r1
    1cd2:	b2 9f       	mul	r27, r18
    1cd4:	70 0d       	add	r23, r0
    1cd6:	81 1d       	adc	r24, r1
    1cd8:	11 24       	eor	r1, r1
    1cda:	91 1d       	adc	r25, r1
    1cdc:	08 95       	ret

00001cde <__muluhisi3>:
    1cde:	0e 94 60 0e 	call	0x1cc0	; 0x1cc0 <__umulhisi3>
    1ce2:	a5 9f       	mul	r26, r21
    1ce4:	90 0d       	add	r25, r0
    1ce6:	b4 9f       	mul	r27, r20
    1ce8:	90 0d       	add	r25, r0
    1cea:	a4 9f       	mul	r26, r20
    1cec:	80 0d       	add	r24, r0
    1cee:	91 1d       	adc	r25, r1
    1cf0:	11 24       	eor	r1, r1
    1cf2:	08 95       	ret

00001cf4 <_exit>:
    1cf4:	f8 94       	cli

00001cf6 <__stop_program>:
    1cf6:	ff cf       	rjmp	.-2      	; 0x1cf6 <__stop_program>
